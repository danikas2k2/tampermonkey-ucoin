/*!
// ==UserScript==
// @name         collector :: ucoin.net
// @namespace    https://ucoin.net/
// @version      1.8.1
// @author       danikas2k2
// @icon         data:@file/png;base64,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
// @downloadURL  https://raw.githubusercontent.com/danikas2k2/tampermonkey-ucoin/master/dist/ucoin.user.js
// @updateURL    https://raw.githubusercontent.com/danikas2k2/tampermonkey-ucoin/master/dist/ucoin.user.js
// @require      https://cdnjs.cloudflare.com/ajax/libs/showdown/1.9.1/showdown.min.js
// @match        https://*.ucoin.net/*
// @run-at       document-end
// ==/UserScript==
*/(()=>{var e={702:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>s});var n=t(81),r=t.n(n),i=t(645),o=t.n(i)()(r());o.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Noto+Sans:wght@400;700&display=swap);"]),o.push([e.id,":root {\n  --base-font-family: 'Noto Sans', sans-serif;\n  --base-font-size: 14px;\n  --color-surface: #fff;\n  --color-surface-warning: #fdd;\n  --color-surface-error: #fed;\n  --color-surface-info: #eee;\n  --color-content-header: #333;\n  --color-content-total: #666;\n  --color-border-total: #060;\n  --color-content-link: #37e;\n  --color-input-sufrace: var(--color-surface);\n  --color-input-content: #222;\n  --color-input-content-disabled: #444;\n  --color-input-border: #aaa;\n  --color-input-border-disabled: #eee;\n  --color-input-shadow: 0 2px 1px #0001 inset;\n  --color-ignore-content: #ccc;\n  --color-ignore-surface: #333a;\n  --color-ignore-content-hover: #fff;\n  --color-ignore-sufrace-hover: #000a;\n  --color-error-surface: #c00;\n  --color-error-border: #0002;\n  --color-error-sufrace-hover: #eee;\n  --color-widget-content: #333;\n  --color-widget-surface: #ccc;\n  --color-separate-country: #000;\n}\nbody {\n  font-family: var(--base-font-family);\n  font-size: var(--base-font-size);\n}\n.widget {\n  font-size: inherit;\n}\n.widget-header {\n  background-color: var(--color-widget-surface);\n  color: var(--color-widget-content);\n  font-weight: 300;\n  font-size: inherit;\n}\n.btn-l {\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n}\n.btn-l.hide {\n  display: none;\n}\n.btn-s {\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n}\n.btn-s.hide {\n  display: none;\n}\n.btn-red {\n  background-color: var(--color-error-surface);\n  border: 1px solid var(--color-error-border);\n}\n.btn-red,\n.btn-red:hover {\n  color: var(--color-error-sufrace-hover);\n}\n#table a.cell {\n  position: relative;\n}\n#table a.cell.samekm {\n  z-index: 1;\n  background-color: var(--color-ignore-surface);\n  color: var(--color-ignore-content);\n  box-shadow: none;\n  -webkit-box-shadow: none;\n}\n#table a.cell.samekm:hover {\n  background-color: var(--color-ignore-sufrace-hover);\n  color: var(--color-ignore-content-hover);\n}\n.btn-set .btn-marker:hover {\n  filter: brightness(1.2);\n}\n#buy_reset {\n  font-size: 16px;\n  font-weight: bold;\n  width: 22px;\n  height: 22px;\n  display: inline-block;\n}\n#buy_reset svg {\n  width: 14px;\n  height: 14px;\n}\n#buy_year_month {\n  color: var(--color-input-content);\n  background-color: var(--color-input-sufrace);\n  border: 1px solid var(--color-input-border);\n  border-radius: 2px;\n  transition: all 150ms ease-in-out 0s;\n  box-shadow: var(--color-input-shadow);\n  display: inline-block;\n  font-family: var(--base-font-family);\n  padding: 2px 8px;\n  height: 28px;\n  box-sizing: border-box;\n  width: 150px;\n}\n#my-func-block .btn-narrow {\n  padding-left: 14px;\n  padding-right: 14px;\n}\n#my-func-block .btn-i {\n  padding: 10px;\n}\n#my-func-block .btn-i svg {\n  width: 15px;\n  height: 15px;\n}\n.widget .list-link .blue-13,\n#coin-list table .blue-13 {\n  font-size: 11px;\n  line-height: 19px;\n  letter-spacing: -1px;\n  white-space: nowrap;\n}\n#coin h1 {\n  color: var(--color-content-header);\n}\n#coin .pricewj {\n  border: none;\n}\n#coin .pricewj span {\n  font-size: 15px;\n}\n#coin .tbl td,\n#coin .tbl th {\n  border: none;\n}\n#coin .coin-info th {\n  background-color: var(--color-surface-info);\n}\n#coin .coin-info tr + tr td {\n  border-top: 1px solid var(--color-surface-info);\n}\n#coin .coin-info tr + tr th {\n  border-top: 1px solid var(--color-surface);\n}\n#coin .coin-info thead + tbody {\n  border-top: 1px solid var(--color-surface);\n}\n#coin .coin-img td.i {\n  border: none;\n}\n#coin #swap-block .dgray-11,\n#coin #wish-block .dgray-11 {\n  width: 32px !important;\n  margin: 0 4px;\n}\n#coin #swap-form .btn-s,\n#coin #wish-form .btn-s {\n  margin: 0 0 0 5px;\n}\n#coin #swap-form .btn-ctrl {\n  float: right;\n  margin: 14px 3px 0;\n  height: 26px;\n}\n#coin #swap-form .btn-ctrl + .btn-ctrl {\n  margin-right: 0;\n}\n#coin #swap-form .btn-ctrl.btn-ctrl-price {\n  margin-right: 0;\n  margin-top: 0;\n}\n#coin #swap-form #swap-qty {\n  margin-top: 1em;\n}\n#my-swap-block #swap-block a {\n  position: relative;\n}\n#my-swap-block #swap-block a .comments {\n  position: absolute;\n  width: auto;\n  left: 100%;\n  text-align: left;\n}\n#my-swap-block #swap-block a .comments .ico-16 {\n  display: inline-block;\n  vertical-align: middle;\n  background-position: -16px 0;\n}\n#my-swap-block #swap-block a .comments:active,\n#my-swap-block #swap-block a .comments:focus,\n#my-swap-block #swap-block a .comments:hover {\n  max-width: 100%;\n  overflow: visible;\n}\n#my-swap-block #swap-block a:active .comments,\n#my-swap-block #swap-block a:focus .comments,\n#my-swap-block #swap-block a:hover .comments {\n  max-width: 100%;\n  overflow: visible;\n}\n#my-swap-block #swap-block center div.btn-set {\n  display: flex;\n  justify-content: space-around;\n  margin: 0 auto;\n  width: fit-content;\n}\n#my-swap-block #swap-block center div.btn-set div {\n  font-size: 11px;\n  flex: 0 0 20px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n  padding: 1px;\n  margin: 0 1px;\n}\n#my-swap-block #swap-block .btn--combine,\n#my-swap-block #swap-block .btn--expand {\n  margin: 8px 2px 0;\n}\n#my-swap-block #swap-block .btn--combine.hide,\n#my-swap-block #swap-block .btn--expand.hide {\n  display: none;\n}\n#my-wish-block #wish-block a {\n  position: relative;\n}\n#my-wish-block #wish-block a .comments {\n  position: absolute;\n  width: auto;\n  left: 100%;\n  text-align: left;\n}\n#my-wish-block #wish-block a .comments .ico-16 {\n  display: inline-block;\n  vertical-align: middle;\n  background-position: -16px 0;\n}\n#my-wish-block #wish-block a .comments:active,\n#my-wish-block #wish-block a .comments:focus,\n#my-wish-block #wish-block a .comments:hover {\n  max-width: 100%;\n  overflow: visible;\n}\n#my-wish-block #wish-block a:active .comments,\n#my-wish-block #wish-block a:focus .comments,\n#my-wish-block #wish-block a:hover .comments {\n  max-width: 100%;\n  overflow: visible;\n}\n#my-wish-block #wish-block center div.btn-set {\n  display: flex;\n  justify-content: space-around;\n  margin: 0 auto;\n  width: fit-content;\n}\n#my-wish-block #wish-block center div.btn-set div {\n  font-size: 11px;\n  flex: 0 0 28px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n  padding: 1px;\n  margin: 0 1px;\n}\n#my-wish-block #wish-block .btn--combine,\n#my-wish-block #wish-block .btn--expand {\n  margin: 8px 2px 0;\n}\n#my-wish-block #wish-block .btn--combine.hide,\n#my-wish-block #wish-block .btn--expand.hide {\n  display: none;\n}\n#swap-list .leftCol,\n#swap-mgr .leftCol {\n  display: block;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 10px;\n  z-index: 200;\n}\n#swap-list .swap-coin tr,\n#swap-mgr .swap-coin tr {\n  transition: opacity 0.25s, background 0.25s;\n}\n#swap-list .swap-coin tr.conflict,\n#swap-mgr .swap-coin tr.conflict {\n  background: var(--color-surface-warning);\n}\n#swap-list .swap-coin tr.conflict.mark,\n#swap-mgr .swap-coin tr.conflict.mark {\n  background: var(--color-surface-error);\n}\n#swap-list .swap-coin tr.ignore,\n#swap-mgr .swap-coin tr.ignore {\n  opacity: 0.5;\n}\n#swap-list .swap-coin tr.ignore.conflict,\n#swap-mgr .swap-coin tr.ignore.conflict,\n#swap-list .swap-coin tr.ignore.mark,\n#swap-mgr .swap-coin tr.ignore.mark {\n  opacity: 0.75;\n}\n#swap-list .swap-coin tr th.thumbnails,\n#swap-mgr .swap-coin tr th.thumbnails {\n  white-space: nowrap;\n}\n#swap-list .swap-coin tr th.thumbnails img.thumbnail,\n#swap-mgr .swap-coin tr th.thumbnails img.thumbnail {\n  width: 50px;\n}\n#swap-list #take-swap-list .filter-container,\n#swap-mgr #take-swap-list .filter-container {\n  position: -webkit-sticky;\n  position: sticky;\n  z-index: 100;\n  top: 0;\n  background: var(--color-surface);\n  padding: 15px 0;\n  margin: 0 0 5px;\n}\n#swap-list .action-board,\n#swap-mgr .action-board,\n#swap-list .filter-container,\n#swap-mgr .filter-container {\n  margin: 15px 0 20px;\n  height: 30px;\n  width: auto;\n}\n#swap-list .filters .filter + .filter,\n#swap-mgr .filters .filter + .filter {\n  margin-left: 4px;\n}\n#swap-list .filters .filter .close,\n#swap-mgr .filters .filter .close {\n  width: 18px;\n  text-align: center;\n  margin-right: -8px;\n}\n#swap-list .filters .filter .flag,\n#swap-mgr .filters .filter .flag {\n  margin-right: 4px;\n}\n#swap-list .filters .filter-dialog,\n#swap-mgr .filters .filter-dialog {\n  max-height: 300px;\n  overflow: auto;\n}\n#swap-list .filters .filter-box.filter-box-disabled,\n#swap-mgr .filters .filter-box.filter-box-disabled {\n  color: var(--color-input-content-disabled);\n}\n#swap-list .filters .filter-box.filter-box-disabled,\n#swap-mgr .filters .filter-box.filter-box-disabled,\n#swap-list .filters .filter-box.filter-box-disabled:hover,\n#swap-mgr .filters .filter-box.filter-box-disabled:hover {\n  border-color: var(--color-input-border-disabled);\n}\n#swap-list #sort-filter,\n#swap-mgr #sort-filter {\n  border-color: var(--color-content-link);\n  width: 100px !important;\n  padding: 4px 12px 7px;\n  display: flex;\n}\n#swap-list #sort-filter .left,\n#swap-mgr #sort-filter .left {\n  max-width: 140px !important;\n  flex: 1 1 auto;\n}\n#swap-list #sort-filter-dialog,\n#swap-mgr #sort-filter-dialog {\n  width: 174px;\n  display: none;\n}\n#swap-list div h2.separate-country,\n#take-swap-list div h2.separate-country,\n#swap-list div a.separate-country,\n#take-swap-list div a.separate-country {\n  font-weight: bold;\n  color: var(--color-separate-country);\n}\n#swap-list .pages {\n  padding-right: 0 !important;\n}\n#swap-list .filter-container {\n  margin: 0 !important;\n  position: relative;\n}\n#swap-list .filter-container.right .filter-dialog {\n  right: 0;\n}\n#swap-mgr table.offer-list tr.str {\n  cursor: default;\n}\n#swap-mgr #smart-filter-container {\n  position: sticky;\n  top: 0;\n  width: 100%;\n  margin: 0;\n  padding: 15px 0 20px;\n  background: var(--color-surface);\n}\n#swap-mgr #smart-filter-container #country-filter {\n  width: 129px;\n}\n#swap-mgr #smart-filter-container #country-filter.selected {\n  border-color: var(--color-content-link);\n}\n#swap-mgr #smart-filter-container .swap-coin-filter input.filter {\n  width: 100%;\n}\n#swap-list .price-times,\n#swap-mgr .price-times {\n  color: darkred;\n  font-weight: bold;\n}\n#swap-list .price-over,\n#swap-mgr .price-over {\n  color: brown;\n}\n#swap-list .price-under,\n#swap-mgr .price-under {\n  color: green;\n}\n#swap-list .price-times.gray-11,\n#swap-mgr .price-times.gray-11,\n#swap-list .price-over.gray-11,\n#swap-mgr .price-over.gray-11,\n#swap-list .price-under.gray-11,\n#swap-mgr .price-under.gray-11 {\n  padding-left: 6px;\n}\n#swap-list .price-tooltip,\n#swap-mgr .price-tooltip {\n  display: block;\n}\n#swap-list .price-cond,\n#swap-mgr .price-cond {\n  display: block;\n  border-top: 3px solid darkred;\n  color: darkred;\n  font-weight: bold;\n}\n#swap-list .price-line,\n#swap-mgr .price-line {\n  display: block;\n  height: 1.1em !important;\n  padding: 3px 6px;\n  border-top: 1px solid #eeeeee;\n}\n#swap-list .price-double,\n#swap-mgr .price-double {\n  height: 2.4em !important;\n}\n#swap-list .price-triple,\n#swap-mgr .price-triple {\n  height: 3.5em !important;\n}\n#profile .price {\n  display: inline-block;\n}\n#profile .price .total {\n  float: right;\n  color: var(--color-content-total);\n  font-size: 20px;\n  font-family: var(--base-font-family);\n  font-weight: normal;\n  margin-top: 4px;\n  padding-top: 4px;\n  border-top: 1px solid var(--color-border-total);\n}\n#profile .price .total .cur {\n  font-size: 16px;\n  padding-right: 6px;\n}\n#tree .tree-filter {\n  color: var(--color-input-content);\n  background-color: var(--color-input-sufrace);\n  border: 1px solid var(--color-input-border);\n  border-radius: 2px;\n  transition: all 150ms ease-in-out 0s;\n  box-shadow: var(--color-input-shadow);\n  display: inline-block;\n  font-family: var(--base-font-family);\n  padding: 2px 8px;\n  height: 28px;\n  box-sizing: border-box;\n  width: 100%;\n  margin-bottom: 3px;\n  font-size: 13px;\n}\n#tree #catalog-tree .country .hide,\n#tree #catalog-tree .period .hide {\n  display: none;\n}\n#coin .rnav {\n  position: relative;\n}\n#coin-chooser-dialog {\n  --width: 200px;\n  --height: 36px;\n  --gap: 20px;\n  --columns: 3;\n  --rows: 20;\n  width: max-content;\n  min-width: var(--width);\n  max-width: calc((var(--width) + var(--gap)) * var(--columns) - var(--gap));\n  max-height: calc(var(--height) * var(--rows)) !important;\n  column-width: var(--width);\n  column-gap: var(--gap);\n  right: 0;\n}\n#coin-chooser-dialog .list-link {\n  display: inline-block;\n  width: calc(var(--width) - 24px);\n}\n.filter-dialog .list-link {\n  display: flex;\n}\n.filter-dialog .list-link .left {\n  flex: 1;\n  text-align: start;\n}\n.filter-dialog .list-link .left.flag {\n  flex: 0 1 auto;\n}\n.filter-dialog .list-link .right {\n  display: flex;\n  align-items: center;\n}\n.country-list a,\n.catalog-list a {\n  border: none;\n}\nul.regions {\n  margin-block-start: 2em;\n  padding-inline-start: 0.5em;\n}\nul.regions li.region {\n  display: block;\n  /*&.active > h2 {\n            display: none;\n        }*/\n}\nul.regions li.region.hide {\n  display: none;\n}\nul.regions li.region h2 {\n  font-size: 1.6em;\n}\nul.regions li.region h2 .lgray-13 {\n  padding-inline-start: 1em;\n}\nul.regions li.region li.region h2 {\n  font-size: 1.4em;\n}\nul.regions li.region li.region li.region h2 {\n  font-size: 1.2em;\n}\nul.regions li.region li.region li.region li.region h2 {\n  font-size: 1.1em;\n}\nul.regions + ul.regions > li.region {\n  margin-block-start: 3em;\n}\nul.hor-switcher .close {\n  padding: 0 4px;\n}\n",""]);const s=o},645:e=>{"use strict";e.exports=function(e){var a=[];return a.toString=function(){return this.map((function(a){var t="",n=void 0!==a[5];return a[4]&&(t+="@supports (".concat(a[4],") {")),a[2]&&(t+="@media ".concat(a[2]," {")),n&&(t+="@layer".concat(a[5].length>0?" ".concat(a[5]):""," {")),t+=e(a),n&&(t+="}"),a[2]&&(t+="}"),a[4]&&(t+="}"),t})).join("")},a.i=function(e,t,n,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(n)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);n&&o[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),a.push(u))}},a}},81:e=>{"use strict";e.exports=function(e){return e[1]}},602:e=>{e.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512"><path fill="currentColor" d="M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z"></path></svg>'},916:e=>{e.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12m-17.99 504.97l22.63-22.63a24 24 0 0 0 0-33.94L63.6 7.03a24 24 0 0 0-33.94 0L7.03 29.66a24 24 0 0 0 0 33.94L448.4 504.97a24 24 0 0 0 33.94 0z"></path></svg>'},584:e=>{e.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z"></path></svg>'},238:e=>{e.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z"></path></svg>'},234:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.getCountryId=a.countryNames=a.countryRegions=void 0;const n=t(921);a.countryRegions={abkhazia:[n.Asia,n.Western_Asia],afars_issas:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],afghanistan:[n.Asia,n.Southern_Asia],ajman:[n.Asia,n.Western_Asia],albania:[n.Europe,n.Southern_Europe,n.Southeast_Europe],alderney:[n.Europe,n.Western_Europe],algeria:[n.Africa,n.Northern_and_Western_Africa,n.Northern_Africa],american_samoa:[n.Oceania,n.Polynesia],andorra:[n.Europe,n.Euro,n.Euro_A],angola:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],anguilla:[n.America,n.Central_America_and_Caribbean,n.Caribbean],anhalt_bernburg:[n.Europe,n.Central_Europe],antigua_barbuda:[n.America,n.Central_America_and_Caribbean,n.Caribbean],argentina:[n.America,n.Southern_America],argentine_provinces:[n.America,n.Southern_America],armavir:[n.Asia,n.Western_Asia],armenia:[n.Asia,n.Western_Asia],aruba:[n.America,n.Central_America_and_Caribbean,n.Caribbean],ascension_island:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],australia:[n.Oceania,n.Australia_and_New_Zealand],austria:[n.Europe,n.Central_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],austrian_netherlands:[n.Europe,n.Western_Europe],azerbaijan:[n.Asia,n.Western_Asia,n.Europe,n.Eastern_Europe],azores:[n.Europe,n.Southern_Europe,n.Southwest_Europe],baden:[n.Europe,n.Central_Europe],bahamas:[n.America,n.Central_America_and_Caribbean,n.Caribbean],bahawalpur:[n.Asia,n.Southern_Asia],bahrain:[n.Asia,n.Western_Asia],bangladesh:[n.Asia,n.Southern_Asia],barbados:[n.America,n.Central_America_and_Caribbean,n.Caribbean],baroda:[n.Asia,n.Southern_Asia],bavaria:[n.Europe,n.Central_Europe],belarus:[n.Europe,n.Eastern_Europe],belgian_congo:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],belgium:[n.Europe,n.Western_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],belize:[n.America,n.Central_America_and_Caribbean,n.Central_America],benin:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],berg:[n.Europe,n.Central_Europe],bermuda:[n.America,n.Northern_America],bhopal:[n.Asia,n.Southern_Asia],bhutan:[n.Asia,n.Southern_Asia],biafra:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],bikaner:[n.Asia,n.Southern_Asia],biot:[n.Asia,n.Southern_Asia],bohemia:[n.Europe,n.Central_Europe],bohemia_moravia:[n.Europe,n.Central_Europe],bolivia:[n.America,n.Southern_America],bosnia_herzegovina:[n.Europe,n.Southern_Europe,n.Southeast_Europe],botswana:[n.Africa,n.Central_and_Southern_Africa,n.Southern_Africa],brandenburg_prussia:[n.Europe,n.Central_Europe],brazil:[n.America,n.Southern_America],bremen:[n.Europe,n.Central_Europe],british_antarctic_territory:[n.Antarctica],british_east_africa:[n.Africa,n.Eastern_Africa,n.East_African_Community],british_east_indies:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],british_guiana:[n.America,n.Southern_America],british_honduras:[n.America,n.Central_America_and_Caribbean,n.Central_America],british_india:[n.Asia,n.Southern_Asia],british_west_africa:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],british_west_indies:[n.America,n.Central_America_and_Caribbean,n.Caribbean],brunei:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],brunswick:[n.Europe,n.Central_Europe],brunswick_luneburg:[n.Europe,n.Central_Europe],brunswick_wolfenbuttel:[n.Europe,n.Central_Europe],bukhara:[n.Asia,n.Central_and_Eastern_Asia,n.Central_Asia],bulgaria:[n.Europe,n.Eastern_Europe,n.PayPal_Europe],burgau:[n.Europe,n.Central_Europe],burkina_faso:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],burundi:[n.Africa,n.Eastern_Africa,n.East_African_Community],cambodia:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],cameroon:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],canada:[n.America,n.Northern_America],canadian_provinces:[n.America,n.Northern_America],cape_verde:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],caribbean_netherlands:[n.America,n.Central_America_and_Caribbean,n.Caribbean],catalonia:[n.Europe,n.Southern_Europe,n.Southwest_Europe],cayman_islands:[n.America,n.Central_America_and_Caribbean,n.Caribbean],central_africa:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],central_african_republic:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],central_american_republic:[n.America,n.Central_America_and_Caribbean,n.Central_America],ceylon:[n.Asia,n.Southern_Asia],chad:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],chile:[n.America,n.Southern_America],china:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],china_empire:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],china_republic:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],colombia:[n.America,n.Southern_America],comoros:[n.Africa,n.Eastern_Africa,n.Indian_Ocean_Islands],congo_democratic_republic:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],congo_free_state:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],cook_islands:[n.Oceania,n.Polynesia],costa_rica:[n.America,n.Central_America_and_Caribbean,n.Central_America],cote_d_ivoire:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],courland_semigallia:[n.Europe,n.Central_Europe],crete:[n.Europe,n.Southern_Europe,n.Southeast_Europe],crimea:[n.Europe,n.Eastern_Europe],croatia:[n.Europe,n.Southern_Europe,n.Southeast_Europe,n.PayPal_Europe],cuba:[n.America,n.Central_America_and_Caribbean,n.Caribbean],curacao:[n.America,n.Central_America_and_Caribbean,n.Caribbean],cyprus:[n.Europe,n.Eastern_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],czech_republic:[n.Europe,n.Central_Europe,n.PayPal_Europe],czechoslovakia:[n.Europe,n.Central_Europe],danish_west_indies:[n.America,n.Central_America_and_Caribbean,n.Caribbean],danzig:[n.Europe,n.Poland],darfur:[n.Africa,n.Eastern_Africa,n.Nile_Valley],demerara_essequibo:[n.America,n.Southern_America],denmark:[n.Europe,n.Northern_Europe,n.PayPal_Europe],djibouti:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],dominica:[n.America,n.Central_America_and_Caribbean,n.Caribbean],dominican_republic:[n.America,n.Central_America_and_Caribbean,n.Caribbean],dutch_republic:[n.Europe,n.Western_Europe],east_timor:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],eastern_caribbean:[n.America,n.Central_America_and_Caribbean,n.Caribbean],ecuador:[n.America,n.Southern_America],egypt:[n.Africa,n.Northern_and_Western_Africa,n.Northern_Africa],el_salvador:[n.America,n.Central_America_and_Caribbean,n.Central_America],england:[n.Europe,n.Western_Europe],equatorial_african_states:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],equatorial_guinea:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],eritrea:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],estonia:[n.Europe,n.Northern_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],ethiopia:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],eu:[n.Europe,n.Euro],falkland_islands:[n.America,n.Southern_America],faroes:[n.Europe,n.Northern_Europe],fiji:[n.Oceania,n.Melanesia],finland:[n.Europe,n.Northern_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],france:[n.Europe,n.Western_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],frankfurt:[n.Europe,n.Central_Europe],french_cochinchina:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],french_colonies:[n.Worldwide],french_equatorial_africa:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],french_guiana:[n.America,n.Southern_America],french_indochina:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],french_oceania:[n.Oceania,n.Polynesia],french_pacific_territories:[n.Oceania,n.Polynesia],french_polinesia:[n.Oceania,n.Polynesia],french_somaliland:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],french_west_africa:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],fujairah:[n.Asia,n.Western_Asia],further_austria:[n.Europe,n.Central_Europe],gabon:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],galicia_lodomeria:[n.Europe,n.Eastern_Europe],gambia:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],genoa:[n.Europe,n.Southern_Europe,n.Southwest_Europe],georgia:[n.Asia,n.Western_Asia,n.Europe,n.Eastern_Europe],german_democratic_republic:[n.Europe,n.Germany],german_east_africa:[n.Africa,n.Eastern_Africa,n.East_African_Community],german_empire:[n.Europe,n.Germany],german_new_guinea:[n.Oceania,n.Melanesia],germany:[n.Europe,n.Germany,n.Euro,n.Euro_A,n.PayPal_Europe],ghana:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],gibraltar:[n.Europe,n.United_Kingdom,n.PayPal_UK],gorizia_gradisca:[n.Europe,n.Southern_Europe,n.Southwest_Europe],greece:[n.Europe,n.Southern_Europe,n.Southeast_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],greenland:[n.America,n.Northern_America,n.Europe,n.Northern_Europe],grenada:[n.America,n.Central_America_and_Caribbean,n.Caribbean],guadeloupe:[n.America,n.Central_America_and_Caribbean,n.Caribbean],guatemala:[n.America,n.Central_America_and_Caribbean,n.Central_America],gubbio:[n.Europe,n.Southern_Europe,n.Southwest_Europe],guernsey:[n.Europe,n.United_Kingdom,n.PayPal_UK],guinea:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],guinea_bissau:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],guyana:[n.America,n.Southern_America],gwalior:[n.Asia,n.Southern_Asia],haiti:[n.America,n.Central_America_and_Caribbean,n.Caribbean],hamburg:[n.Europe,n.Central_Europe],hannover:[n.Europe,n.Central_Europe],hawaii:[n.Oceania,n.Polynesia,n.America,n.Northern_America],hejaz:[n.Asia,n.Western_Asia],hesse_kassel:[n.Europe,n.Central_Europe],hessen_darmstadt:[n.Europe,n.Central_Europe],hessen_homburg:[n.Europe,n.Central_Europe],honduras:[n.America,n.Central_America_and_Caribbean,n.Central_America],hong_kong:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],hungary:[n.Europe,n.Central_Europe,n.PayPal_Europe],hutt_river:[n.Oceania,n.Australia_and_New_Zealand],hyderabad:[n.Asia,n.Southern_Asia],iceland:[n.Europe,n.Northern_Europe,n.PayPal_Europe],india:[n.Asia,n.Southern_Asia],indonesia:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],indore:[n.Asia,n.Southern_Asia],ionian_islands:[n.Europe,n.Southern_Europe,n.Southeast_Europe],iran:[n.Asia,n.Western_Asia],iraq:[n.Asia,n.Western_Asia],ireland:[n.Europe,n.Western_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],isle_of_man:[n.Europe,n.United_Kingdom,n.PayPal_UK],israel:[n.Asia,n.Western_Asia],italian_eritrea:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],italian_somaliland:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],italy:[n.Europe,n.Southern_Europe,n.Southwest_Europe,n.Euro,n.Euro_A,n.PayPal_Europe],jaipur:[n.Asia,n.Southern_Asia],jamaica:[n.America,n.Central_America_and_Caribbean,n.Caribbean],jaora:[n.Asia,n.Southern_Asia],japan:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],japanese_china:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],jersey:[n.Europe,n.United_Kingdom,n.PayPal_UK],jodhpur:[n.Asia,n.Southern_Asia],jordan:[n.Asia,n.Western_Asia],julich_berg:[n.Europe,n.Central_Europe],junagadh:[n.Asia,n.Southern_Asia],katanga:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],kazakhstan:[n.Asia,n.Central_and_Eastern_Asia,n.Central_Asia],kenya:[n.Africa,n.Eastern_Africa,n.East_African_Community],khiva:[n.Asia,n.Central_and_Eastern_Asia,n.Central_Asia],khorezm:[n.Asia,n.Central_and_Eastern_Asia,n.Central_Asia],kiau_chau:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],kiribati:[n.Oceania,n.Micronesia],korea:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],krakow:[n.Europe,n.Central_Europe],kutch:[n.Asia,n.Southern_Asia],kuwait:[n.Asia,n.Western_Asia],kyrgyzstan:[n.Asia,n.Central_and_Eastern_Asia,n.Central_Asia],laos:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],latvia:[n.Europe,n.Central_Europe,n.Euro,n.Euro_L,n.PayPal_Europe],lebanon:[n.Asia,n.Western_Asia],lesotho:[n.Africa,n.Central_and_Southern_Africa,n.Southern_Africa],liberia:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],libya:[n.Africa,n.Northern_and_Western_Africa,n.Northern_Africa],liechtenstein:[n.Europe,n.Western_Europe,n.PayPal_Europe],liege:[n.Europe,n.Central_Europe],lippe:[n.Europe,n.Central_Europe],lithuania:[n.Europe,n.Lithuania,n.Euro,n.Euro_L,n.PayPal_Europe],livonia:[n.Europe,n.Central_Europe],lombardy_venetia:[n.Europe,n.Southern_Europe,n.Southwest_Europe],lubeck:[n.Europe,n.Central_Europe],lucca:[n.Europe,n.Southern_Europe,n.Southwest_Europe],lundy:[n.Europe,n.Western_Europe],luxembourg:[n.Europe,n.Western_Europe,n.Euro,n.Euro_L,n.PayPal_Europe],macau:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],macedonia:[n.Europe,n.Southern_Europe,n.Southeast_Europe],madagascar:[n.Africa,n.Eastern_Africa,n.Indian_Ocean_Islands],madeira_islands:[n.Europe,n.Southern_Europe,n.Southwest_Europe],mainz:[n.Europe,n.Central_Europe],majorca:[n.Europe,n.Southern_Europe,n.Southwest_Europe],malawi:[n.Africa,n.Central_and_Southern_Africa,n.Southeast_Africa],malaya:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],malaya_british_borneo:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],malaysia:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],maldives:[n.Asia,n.Southern_Asia],mali:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],malta:[n.Europe,n.Eastern_Europe,n.Euro,n.Euro_L,n.PayPal_Europe],mantua:[n.Europe,n.Southern_Europe,n.Southwest_Europe],marshall_islands:[n.Oceania,n.Micronesia],martinique:[n.America,n.Central_America_and_Caribbean,n.Caribbean],mauritania:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],mauritius:[n.Africa,n.Eastern_Africa,n.Indian_Ocean_Islands],mecklenburg_schwerin:[n.Europe,n.Central_Europe],mecklenburg_strelitz:[n.Europe,n.Central_Europe],mewar:[n.Asia,n.Southern_Asia],mexico:[n.America,n.Central_America_and_Caribbean,n.Central_America],milan:[n.Europe,n.Southern_Europe,n.Southwest_Europe],moldavia_and_wallachia:[n.Europe,n.Eastern_Europe],moldova:[n.Europe,n.Eastern_Europe],mombasa:[n.Africa,n.Eastern_Africa,n.East_African_Community],monaco:[n.Europe,n.Western_Europe,n.Euro,n.Euro_L],mongolia:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],montenegro:[n.Europe,n.Southern_Europe,n.Southeast_Europe],montserrat:[n.America,n.Central_America_and_Caribbean,n.Caribbean],morocco:[n.Africa,n.Northern_and_Western_Africa,n.Northern_Africa],mozambique:[n.Africa,n.Central_and_Southern_Africa,n.Southeast_Africa],mughal_empire:[n.Asia,n.Southern_Asia],myanmar:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],nagorno_karabakh:[n.Asia,n.Western_Asia],namibia:[n.Africa,n.Central_and_Southern_Africa,n.Southern_Africa],naples:[n.Europe,n.Southern_Europe,n.Southwest_Europe],nassau:[n.Europe,n.Central_Europe],nassau_usingen:[n.Europe,n.Central_Europe],nassau_weilburg:[n.Europe,n.Central_Europe],nauru:[n.Oceania,n.Micronesia],navarra:[n.Europe,n.Southern_Europe,n.Southwest_Europe],nawanagar:[n.Asia,n.Southern_Asia],nepal:[n.Asia,n.Southern_Asia],netherlands:[n.Europe,n.Western_Europe,n.Euro,n.Euro_L,n.PayPal_Europe],netherlands_antilles:[n.America,n.Central_America_and_Caribbean,n.Caribbean],netherlands_east_indies:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],new_caledonia:[n.Oceania,n.Melanesia],new_guinea:[n.Oceania,n.Melanesia],new_hebrides:[n.Oceania,n.Melanesia],new_zealand:[n.Oceania,n.Australia_and_New_Zealand],newfoundland:[n.America,n.Northern_America],nicaragua:[n.America,n.Central_America_and_Caribbean,n.Central_America],niger:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],nigeria:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],niue:[n.Oceania,n.Polynesia],north_borneo:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],north_korea:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],norway:[n.Europe,n.Northern_Europe,n.PayPal_Europe],oldenburg:[n.Europe,n.Central_Europe],oman:[n.Asia,n.Western_Asia],order_of_malta:[n.Europe,n.Southern_Europe,n.Southwest_Europe],ottoman_empire:[n.Asia,n.Western_Asia],oudh:[n.Asia,n.Southern_Asia],pakistan:[n.Asia,n.Southern_Asia],palatinate:[n.Europe,n.Central_Europe],palatine_zweibrucken:[n.Europe,n.Central_Europe],palau:[n.Oceania,n.Micronesia],palestine:[n.Asia,n.Western_Asia],panama:[n.America,n.Central_America_and_Caribbean,n.Central_America],papal_states:[n.Europe,n.Southern_Europe,n.Southwest_Europe],papua_new_guinea:[n.Oceania,n.Melanesia],paraguay:[n.America,n.Southern_America],parma:[n.Europe,n.Southern_Europe,n.Southwest_Europe],peru:[n.America,n.Southern_America],philippines:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],piedmont:[n.Europe,n.Southern_Europe,n.Southwest_Europe],pitcairn_islands:[n.Oceania,n.Polynesia],poland:[n.Europe,n.Poland,n.PayPal_Europe],porbandar:[n.Asia,n.Southern_Asia],portugal:[n.Europe,n.Southern_Europe,n.Southwest_Europe,n.Euro,n.Euro_L,n.PayPal_Europe],portuguese_india:[n.Asia,n.Southern_Asia],portuguese_timor:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],prussia:[n.Europe,n.Germany],pudukkottai:[n.Asia,n.Southern_Asia],puerto_rico:[n.America,n.Central_America_and_Caribbean,n.Caribbean],qatar:[n.Asia,n.Western_Asia],qatar_dubai:[n.Asia,n.Western_Asia],ras_al_khaimah:[n.Asia,n.Western_Asia],ratlam:[n.Asia,n.Southern_Asia],reunion:[n.Africa,n.Eastern_Africa,n.Indian_Ocean_Islands],reuss_gera:[n.Europe,n.Central_Europe],reuss_greiz:[n.Europe,n.Central_Europe],rhodesia:[n.Africa,n.Central_and_Southern_Africa,n.Southeast_Africa],rhodesia_nyasaland:[n.Africa,n.Central_and_Southern_Africa,n.Southeast_Africa],roman_republic:[n.Europe,n.Southern_Europe,n.Southwest_Europe],romania:[n.Europe,n.Eastern_Europe,n.PayPal_Europe],ruanda_burundi:[n.Africa,n.Eastern_Africa,n.East_African_Community],ruanda_urundi:[n.Africa,n.Eastern_Africa,n.East_African_Community],russia:[n.Europe,n.Russia,n.Russian_Federation],rwanda:[n.Africa,n.Eastern_Africa,n.East_African_Community],ryukyu:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],saar:[n.Europe,n.Germany],saint_helena:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],saint_helena_ascension:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],saint_kitts_nevis:[n.America,n.Central_America_and_Caribbean,n.Caribbean],saint_lucia:[n.America,n.Central_America_and_Caribbean,n.Caribbean],saint_pierre_miquelon:[n.America,n.Northern_America],saint_vincent_grenadines:[n.America,n.Central_America_and_Caribbean,n.Caribbean],salzburg:[n.Europe,n.Central_Europe],samoa:[n.Oceania,n.Polynesia],san_marino:[n.Europe,n.Southern_Europe,n.Southwest_Europe,n.Euro,n.Euro_L],sao_tome_principe:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],sarawak:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],sardinia:[n.Europe,n.Southern_Europe,n.Southwest_Europe],saudi_arabia:[n.Asia,n.Western_Asia],saxe_altenburg:[n.Europe,n.Central_Europe],saxe_coburg_gotha:[n.Europe,n.Central_Europe],saxe_gotha_altenburg:[n.Europe,n.Central_Europe],saxe_hildburghausen:[n.Europe,n.Central_Europe],saxe_meiningen:[n.Europe,n.Central_Europe],saxe_weimar_eisenach:[n.Europe,n.Central_Europe],saxony:[n.Europe,n.Central_Europe],schaumburg_lippe:[n.Europe,n.Central_Europe],schleswig_holstein:[n.Europe,n.Central_Europe],schwarzburg_rudolstadt:[n.Europe,n.Central_Europe],schwarzburg_sondershausen:[n.Europe,n.Central_Europe],scotland:[n.Europe,n.Western_Europe],sealand:[n.Europe,n.Western_Europe],seborga:[n.Europe,n.Southern_Europe,n.Southwest_Europe],senegal:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],serbia:[n.Europe,n.Southern_Europe,n.Southeast_Europe],seychelles:[n.Africa,n.Eastern_Africa,n.Indian_Ocean_Islands],sharjah:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],sicily:[n.Europe,n.Southern_Europe,n.Southwest_Europe],sierra_leone:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],silesia:[n.Europe,n.Central_Europe],singapore:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],slovakia:[n.Europe,n.Central_Europe,n.Euro,n.Euro_L,n.PayPal_Europe],slovenia:[n.Europe,n.Southern_Europe,n.Southeast_Europe,n.Euro,n.Euro_L,n.PayPal_Europe],solomon_islands:[n.Oceania,n.Melanesia],somalia:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],somaliland:[n.Africa,n.Eastern_Africa,n.Horn_of_Africa],south_africa:[n.Africa,n.Central_and_Southern_Africa,n.Southern_Africa],south_arabia:[n.Asia,n.Western_Asia],south_georgia:[n.America,n.Southern_America],south_korea:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],south_sudan:[n.Africa,n.Eastern_Africa,n.Nile_Valley],south_vietnam:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],south_yemen:[n.Asia,n.Western_Asia],southern_rhodesia:[n.Africa,n.Central_and_Southern_Africa,n.Southeast_Africa],spain:[n.Europe,n.Southern_Europe,n.Southwest_Europe,n.Euro,n.Euro_L,n.PayPal_Europe],spainish_provinces:[n.Europe,n.Southern_Europe,n.Southwest_Europe],span_civil_war:[n.Europe,n.Southern_Europe,n.Southwest_Europe],spanish_netherlands:[n.Europe,n.Western_Europe],spitsbergen:[n.Europe,n.Northern_Europe],sri_lanka:[n.Asia,n.Southern_Asia],straits_settlements:[n.Asia,n.Southeast_Asia,n.Maritime_Southeast_Asia],sudan:[n.Africa,n.Eastern_Africa,n.Nile_Valley],suriname:[n.America,n.Southern_America],swaziland:[n.Africa,n.Central_and_Southern_Africa,n.Southern_Africa],sweden:[n.Europe,n.Northern_Europe,n.PayPal_Europe],swiss_cantons:[n.Europe,n.Western_Europe],switzerland:[n.Europe,n.Western_Europe,n.PayPal_Europe],syria:[n.Asia,n.Western_Asia],taiwan:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],tajikistan:[n.Asia,n.Central_and_Eastern_Asia,n.Central_Asia],tannu_tuva:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],tanzania:[n.Africa,n.Eastern_Africa,n.East_African_Community],thailand:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],third_reich:[n.Europe,n.Germany],tibet:[n.Asia,n.Central_and_Eastern_Asia,n.Eastern_Asia],togo:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],tokelau:[n.Oceania,n.Polynesia],tonga:[n.Oceania,n.Polynesia],tonk:[n.Asia,n.Southern_Asia],tonkin:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],transnistria:[n.Europe,n.Eastern_Europe],transylvania:[n.Europe,n.Eastern_Europe],travancore:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],trinidad_tobago:[n.America,n.Central_America_and_Caribbean,n.Caribbean],tristan_da_cunha:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],tunisia:[n.Africa,n.Northern_and_Western_Africa,n.Northern_Africa],turkey:[n.Asia,n.Western_Asia],turkmenistan:[n.Asia,n.Central_and_Eastern_Asia,n.Central_Asia],turks_caicos_islands:[n.America,n.Central_America_and_Caribbean,n.Caribbean],tuscany:[n.Europe,n.Southern_Europe,n.Southwest_Europe],tuvalu:[n.Oceania,n.Polynesia],two_sicilies:[n.Europe,n.Southern_Europe,n.Southwest_Europe],uganda:[n.Africa,n.Eastern_Africa,n.East_African_Community],ukraine:[n.Europe,n.Eastern_Europe],umm_al_qaiwain:[n.Asia,n.Western_Asia],united_arab_emirates:[n.Asia,n.Western_Asia],united_kingdom:[n.Europe,n.United_Kingdom,n.PayPal_UK],uruguay:[n.America,n.Southern_America],usa:[n.America,n.Northern_America],ussr:[n.Europe,n.Russia,n.Russian_Empire],uzbekistan:[n.Asia,n.Central_and_Eastern_Asia,n.Central_Asia],vanuatu:[n.Oceania,n.Melanesia],vatican_city:[n.Europe,n.Southern_Europe,n.Southwest_Europe,n.Euro,n.Euro_L],venezuela:[n.America,n.Southern_America],venice:[n.Europe,n.Southern_Europe,n.Southwest_Europe],vietnam:[n.Asia,n.Southeast_Asia,n.Mainland_Southeast_Asia],virgin_islands_british:[n.America,n.Central_America_and_Caribbean,n.Caribbean],waldeck:[n.Europe,n.Central_Europe],west_congo:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],western_africa:[n.Africa,n.Northern_and_Western_Africa,n.Western_Africa],western_sahara:[n.Africa,n.Northern_and_Western_Africa,n.Northern_Africa],westphalia:[n.Europe,n.Central_Europe],wurttemberg:[n.Europe,n.Central_Europe],wurzburg:[n.Europe,n.Central_Europe],yemen:[n.Asia,n.Western_Asia],yugoslavia:[n.Europe,n.Southern_Europe,n.Southeast_Europe],zaire:[n.Africa,n.Central_and_Southern_Africa,n.Central_Africa],zambia:[n.Africa,n.Central_and_Southern_Africa,n.Southeast_Africa],zanzibar:[n.Africa,n.Eastern_Africa,n.East_African_Community],zar:[n.Africa,n.Central_and_Southern_Africa,n.Southern_Africa],zimbabwe:[n.Africa,n.Central_and_Southern_Africa,n.Southeast_Africa]},a.countryNames={abkhazia:{en:"Abkhazia",lt:"Abchazija",ru:"Абхазия"},afars_issas:{en:"French Afars and Issas",lt:"Prancūzijos afarų ir isų teritorija",ru:"Французские афар и исса"},afghanistan:{en:"Afghanistan",lt:"Afganistanas",ru:"Афганистан"},ajman:{en:"Ajman",lt:"Adžmanas",ru:"Аджман"},albania:{en:"Albania",lt:"Albanija",ru:"Албания"},alderney:{en:"Alderney",lt:"Oldernis",ru:"Олдерни"},algeria:{en:"Algeria",lt:"Alžyras",ru:"Алжир"},american_samoa:{en:"American Samoa",lt:"Amerikos Samoa",ru:"Американское Самоа"},andorra:{en:"Andorra",lt:"Andora",ru:"Андорра"},angola:{en:"Angola",lt:"Angola",ru:"Ангола"},anguilla:{en:"Anguilla",lt:"Angilija",ru:"Ангилья"},anhalt_bernburg:{en:"Anhalt-Bernburg",lt:"Anhaltas-Bernburgas",ru:"Ангальт-Бернбург"},antigua_barbuda:{en:"Antigua and Barbuda",lt:"Antigva ir Barbuda",ru:"Антигуа и Барбуда"},argentina:{en:"Argentina",lt:"Argentina",ru:"Аргентина"},argentine_provinces:{en:"Argentine provinces",lt:"Argentinos provincijos",ru:"Аргентинские провинции"},armavir:{en:"Armavir",lt:"Armaviras",ru:"Армавир"},armenia:{en:"Armenia",lt:"Armėnija",ru:"Армения"},aruba:{en:"Aruba",lt:"Aruba",ru:"Аруба"},ascension_island:{en:"Ascension Island",lt:"Dangun Žengimo sala",ru:"Остров Вознесения"},australia:{en:"Australia",lt:"Australija",ru:"Австралия"},austria:{en:"Austria",lt:"Austrija",ru:"Австрия"},austrian_netherlands:{en:"Austrian Netherlands",lt:"Austrijos Nyderlandai",ru:"Австрийские Нидерланды"},azerbaijan:{en:"Azerbaijan",lt:"Azerbaidžanas",ru:"Азербайджан"},azores:{en:"Azores",lt:"Azorai",ru:"Азорские острова"},baden:{en:"Baden",lt:"Badenas",ru:"Баден"},bahamas:{en:"Bahamas",lt:"Bahamos",ru:"Багамы"},bahawalpur:{en:"Bahawalpur",lt:"Bahavalpūras",ru:"Бахавалпур "},bahrain:{en:"Bahrain",lt:"Bahreinas",ru:"Бахрейн"},bangladesh:{en:"Bangladesh",lt:"Bangladešas",ru:"Бангладеш"},barbados:{en:"Barbados",lt:"Barbadosas",ru:"Барбадос"},baroda:{en:"Baroda",lt:"Baroda",ru:"Барода"},bavaria:{en:"Bavaria",lt:"Bavarija",ru:"Бавария"},belarus:{en:"Belarus",lt:"Baltarusija",ru:"Беларусь"},belgian_congo:{en:"Belgian Congo",lt:"Belgijos Kongas",ru:"Бельгийское Конго"},belgium:{en:"Belgium",lt:"Belgija",ru:"Бельгия"},belize:{en:"Belize",lt:"Belizas",ru:"Белиз"},benin:{en:"Benin",lt:"Beninas",ru:"Бенин"},berg:{en:"Berg",lt:"Bergas",ru:"Берг"},bermuda:{en:"Bermuda",lt:"Bermudai",ru:"Бермуды"},bhopal:{en:"Bhopal",lt:"Bhopalas",ru:"Бхопал"},bhutan:{en:"Bhutan",lt:"Butanas",ru:"Бутан"},biafra:{en:"Biafra",lt:"Biafra",ru:"Биафра"},bikaner:{en:"Bikaner",lt:"Bykaneras",ru:"Биканер"},biot:{en:"British Indian Ocean Territory",lt:"Indijos Vandenyno Britų Sritis",ru:"Британская территория Индийского океана"},bohemia:{en:"Bohemia",lt:"Bohemija",ru:"Богемия"},bohemia_moravia:{en:"Bohemia and Moravia",lt:"Bohemija ir Moravija",ru:"Богемия и Моравия"},bolivia:{en:"Bolivia",lt:"Bolivija",ru:"Боливия"},bosnia_herzegovina:{en:"Bosnia and Herzegovina",lt:"Bosnija ir Hercegovina",ru:"Босния и Герцеговина"},botswana:{en:"Botswana",lt:"Botsvana",ru:"Ботсвана"},brandenburg_prussia:{en:"Brandenburg-Prussia",lt:"Brandenburgas-Prūsija",ru:"Бранденбург-Пруссия"},brazil:{en:"Brazil",lt:"Brazilija",ru:"Бразилия"},bremen:{en:"Bremen",lt:"Brėmenas",ru:"Бремен"},british_antarctic_territory:{en:"British Antarctic Territory",lt:"Britų Antarktidos teritorija",ru:"Британская антарктическая территория"},british_east_africa:{en:"British East Africa",lt:"Britų Rytų Afrika",ru:"Британская Восточная Африка"},british_east_indies:{en:"British East Indies",lt:"Britų Rytų Indija",ru:"Британская Ост-Индия"},british_guiana:{en:"British Guiana",lt:"Britų Gviana",ru:"Британская Гвиана"},british_honduras:{en:"British Honduras",lt:"Britų Hondūras",ru:"Британский Гондурас"},british_india:{en:"India - British",lt:"Indija - Britų",ru:"Индия - Британская"},british_west_africa:{en:"British West Africa",lt:"Britų Vakarų Afrika",ru:"Британская Западная Африка"},british_west_indies:{en:"British West Indies",lt:"Britų Vest Indija",ru:"Британская Вест-Индия"},brunei:{en:"Brunei",lt:"Brunėjus",ru:"Бруней"},brunswick:{en:"Brunswick",lt:"Braunšveigas",ru:"Брауншвейг"},brunswick_luneburg:{en:"Brunswick-Lüneburg",lt:"Braunšveigas-Liuneburgas",ru:"Брауншвейг-Люнебург"},brunswick_wolfenbuttel:{en:"Brunswick-Wolfenbüttel",lt:"Braunšveigas-Volfenbiutelis",ru:"Брауншвейг-Вольфенбюттель"},bukhara:{en:"Bukhara",lt:"Buchara",ru:"Бухара"},bulgaria:{en:"Bulgaria",lt:"Bulgarija",ru:"Болгария"},burgau:{en:"Burgau",lt:"Burgau",ru:"Бургау"},burkina_faso:{en:"Burkina Faso",lt:"Burkina Fasas",ru:"Буркина Фасо"},burundi:{en:"Burundi",lt:"Burundis",ru:"Бурунди"},cambodia:{en:"Cambodia",lt:"Kambodža",ru:"Камбоджа"},cameroon:{en:"Cameroon",lt:"Kamerūnas",ru:"Камерун"},canada:{en:"Canada",lt:"Kanada",ru:"Канада"},canadian_provinces:{en:"Canadian provinces",lt:"Kanados provincijos",ru:"Канадские провинции"},cape_verde:{en:"Cape Verde",lt:"Žaliasis Kyšulys",ru:"Кабо-Верде"},caribbean_netherlands:{en:"Caribbean Netherlands",lt:"Karibų Nyderlandai",ru:"Карибские Нидерланды"},catalonia:{en:"Catalonia",lt:"Katalonija",ru:"Каталония"},cayman_islands:{en:"Cayman Islands",lt:"Kaimanų salos",ru:"Каймановы острова"},central_africa:{en:"Central Africa (BEAC)",lt:"Centrinė Afrika (BEAC)",ru:"Центральная Африка (BEAC)"},central_african_republic:{en:"Central African Republic",lt:"Centrinės Afrikos Respublika",ru:"ЦАР"},central_american_republic:{en:"Central American Republic",lt:"Centrinės Amerikos Respublika",ru:"Республика Центральной Америки"},ceylon:{en:"Ceylon",lt:"Ceilonas",ru:"Цейлон"},chad:{en:"Chad",lt:"Čadas",ru:"Чад"},chile:{en:"Chile",lt:"Čilė",ru:"Чили"},china:{en:"China",lt:"Kinija",ru:"Китай"},china_empire:{en:"China - Empire",lt:"Kinija - imperija",ru:"Китай - Империя"},china_republic:{en:"China - Republic",lt:"Kinija - Respublika",ru:"Китай - Республика"},colombia:{en:"Colombia",lt:"Kolumbija",ru:"Колумбия"},comoros:{en:"Comoros",lt:"Komorai",ru:"Коморские острова"},congo_democratic_republic:{en:"Congo - DRC",lt:"Kongas - KDR",ru:"Конго - ДРК"},congo_free_state:{en:"Congo Free State",lt:"Laisvoji Kongo Valstybė",ru:"Свободное государство Конго"},cook_islands:{en:"Cook Islands",lt:"Kuko Salos",ru:"Острова Кука"},costa_rica:{en:"Costa Rica",lt:"Kosta Rika",ru:"Коста-Рика"},cote_d_ivoire:{en:"Côte d'Ivoire",lt:"Dramblio Kaulo Krantas",ru:"Кот-д'Ивуар"},courland_semigallia:{en:"Courland and Semigallia",lt:"Kuršas ir Žiemgala",ru:"Курляндия и Семигалия"},crete:{en:"Crete",lt:"Kreta",ru:"Крит"},crimea:{en:"Crimea",lt:"Krymo chanatas",ru:"Крым"},croatia:{en:"Croatia",lt:"Kroatija",ru:"Хорватия"},cuba:{en:"Cuba",lt:"Kuba",ru:"Куба"},curacao:{en:"Curaçao",lt:"Kiurasao",ru:"Кюрасао"},cyprus:{en:"Cyprus",lt:"Kipras",ru:"Кипр"},czech_republic:{en:"Czech Republic",lt:"Čekija",ru:"Чехия"},czechoslovakia:{en:"Czechoslovakia",lt:"Čekoslovakija",ru:"Чехословакия"},danish_west_indies:{en:"Danish West Indies",lt:"Danijos Vakarų Indijos",ru:"Датская Вест-Индия"},danzig:{en:"Danzig",lt:"Dancigas",ru:"Данциг"},darfur:{en:"Darfur",lt:"Darfūras",ru:"Дарфур"},demerara_essequibo:{en:"Demerara and Essequibo",lt:"Demerara ir Esekvibas",ru:"Демерара и Эссекибо"},denmark:{en:"Denmark",lt:"Danija",ru:"Дания"},djibouti:{en:"Djibouti",lt:"Džibutis",ru:"Джибути"},dominica:{en:"Dominica",lt:"Dominika",ru:"Доминика"},dominican_republic:{en:"Dominican Republic",lt:"Dominikos Respublika",ru:"Доминикана"},dutch_republic:{en:"Dutch Republic",lt:"Septynių Jungtinių Nyderlandų Provincijų Respublika",ru:"Голландская республика"},east_timor:{en:"East Timor",lt:"Rytų Timoras",ru:"Восточный Тимор"},eastern_caribbean:{en:"Eastern Caribbean",lt:"Rytų Karibų valstybės",ru:"Восточные Карибы"},ecuador:{en:"Ecuador",lt:"Ekvadoras",ru:"Эквадор"},egypt:{en:"Egypt",lt:"Egiptas",ru:"Египет"},el_salvador:{en:"El Salvador",lt:"Salvadoras",ru:"Сальвадор"},england:{en:"England",lt:"Anglija",ru:"Англия"},equatorial_african_states:{en:"Equatorial African States",lt:"Pusiaujo Afrikos valstybės",ru:"Экваториальная Африка"},equatorial_guinea:{en:"Equatorial Guinea",lt:"Pusiaujo Gvinėja",ru:"Экваториальная Гвинея"},eritrea:{en:"Eritrea",lt:"Eritrėja",ru:"Эритрея"},estonia:{en:"Estonia",lt:"Estija",ru:"Эстония"},ethiopia:{en:"Ethiopia",lt:"Etiopija",ru:"Эфиопия"},eu:{en:"European Union",lt:"Europos Sąjunga",ru:"Европейский союз"},falkland_islands:{en:"Falkland Islands",lt:"Folklando Salos",ru:"Фолклендские острова"},faroes:{en:"Faroe Islands",lt:"Farerai",ru:"Фарерские острова"},fiji:{en:"Fiji",lt:"Fidžis",ru:"Фиджи"},finland:{en:"Finland",lt:"Suomija",ru:"Финляндия"},france:{en:"France",lt:"Prancūzija",ru:"Франция"},frankfurt:{en:"Frankfurt",lt:"Frankfurtas",ru:"Франкфурт"},french_cochinchina:{en:"French Cochinchina",lt:"Prancūzijos Kochinchina",ru:"Французская Кохинхина"},french_colonies:{en:"French colonies",lt:"Prancūzų kolonijos",ru:"Французские колонии"},french_equatorial_africa:{en:"French Equatorial Africa",lt:"Prancūzijos Pusiaujo Afrika",ru:"Французская Экваториальная Африка"},french_guiana:{en:"French Guiana",lt:"Prancūzijos Gviana",ru:"Французская Гвиана"},french_indochina:{en:"French Indochina",lt:"Prancūzijos Indokinija",ru:"Французский Индокитай"},french_oceania:{en:"French Oceania",lt:"Prancūzijos Okeanija",ru:"Французская Океания"},french_pacific_territories:{en:"French pacific territories",lt:"Prancūzijos Ramiojo vandenyno teritorijos",ru:"Французские тихоокеанские территории"},french_polinesia:{en:"French Polynesia",lt:"Prancūzijos Polinezija",ru:"Французская Полинезия"},french_somaliland:{en:"French Somaliland",lt:"Prancūzijos Somalilandas",ru:"Французское Сомали"},french_west_africa:{en:"French West Africa",lt:"Prancūzijos Vakarų Afrika",ru:"Французская Западная Африка"},fujairah:{en:"Fujairah",lt:"Fudžeira",ru:"Эль-Фуджайра"},further_austria:{en:"Further Austria",lt:"Išorinė Austrija",ru:"Передняя Австрия"},gabon:{en:"Gabon",lt:"Gabonas",ru:"Габон"},galicia_lodomeria:{en:"Galicia and Lodomeria",lt:"Galicija ir Lodomerija",ru:"Галиция и Лодомерия"},gambia:{en:"Gambia",lt:"Gambija",ru:"Гамбия"},genoa:{en:"Genoa",lt:"Genujos respublika",ru:"Генуя"},georgia:{en:"Georgia",lt:"Gruzija",ru:"Грузия"},german_democratic_republic:{en:"Germany - GDR",lt:"Vokietija - VDR",ru:"Германия - ГДР"},german_east_africa:{en:"German East Africa",lt:"Vokietijos Rytų Afrika",ru:"Германская Восточная Африка"},german_empire:{en:"German Empire",lt:"Vokietijos imperija",ru:"Германская империя"},german_new_guinea:{en:"German New Guinea",lt:"Vokietijos Naujoji Gvinėja",ru:"Германская Новая Гвинея"},germany:{en:"Germany",lt:"Vokietija",ru:"Германия"},ghana:{en:"Ghana",lt:"Gana",ru:"Гана"},gibraltar:{en:"Gibraltar",lt:"Gibraltaras",ru:"Гибралтар"},gorizia_gradisca:{en:"Gorizia and Gradisca",lt:"Goricija ir Gradiska",ru:"Горица и Градишка"},greece:{en:"Greece",lt:"Graikija",ru:"Греция"},greenland:{en:"Greenland",lt:"Grenlandija",ru:"Гренландия"},grenada:{en:"Grenada",lt:"Grenada",ru:"Гренада"},guadeloupe:{en:"Guadeloupe",lt:"Gvadelupa",ru:"Гваделупа"},guatemala:{en:"Guatemala",lt:"Gvatemala",ru:"Гватемала"},gubbio:{en:"Gubbio",lt:"Gubijus",ru:"Губбио"},guernsey:{en:"Guernsey",lt:"Gernsis",ru:"Гернси"},guinea:{en:"Guinea",lt:"Gvinėja",ru:"Гвинея"},guinea_bissau:{en:"Guinea-Bissau",lt:"Bisau Gvinėja",ru:"Гвинея-Бисау"},guyana:{en:"Guyana",lt:"Gajana",ru:"Гайана"},gwalior:{en:"Gwalior",lt:"Gvalijaras",ru:"Гвалиор"},haiti:{en:"Haiti",lt:"Haitis",ru:"Гаити"},hamburg:{en:"Hamburg",lt:"Hamburgas",ru:"Гамбург"},hannover:{en:"Hannover",lt:"Hanoveris",ru:"Ганновер"},hawaii:{en:"Hawaii",lt:"Havajai",ru:"Гавайи"},hejaz:{en:"Hejaz",lt:"Hidžazas",ru:"Хиджаз"},hesse_kassel:{en:"Hesse-Kassel",lt:"Hesenas-Kaselis",ru:"Гессен-Кассель"},hessen_darmstadt:{en:"Hessen-Darmstadt",lt:"Hesenas-Darmštatas",ru:"Гессен-Дармштадт"},hessen_homburg:{en:"Hessen-Homburg",lt:"Hesenas-Homburgas",ru:"Гессен-Гомбург"},honduras:{en:"Honduras",lt:"Hondūras",ru:"Гондурас"},hong_kong:{en:"Hong Kong",lt:"Honkongas",ru:"Гонконг"},hungary:{en:"Hungary",lt:"Vengrija",ru:"Венгрия"},hutt_river:{en:"Hutt River",lt:"Hato Upės Kunigaikštystė",ru:"Хатт-Ривер"},hyderabad:{en:"Hyderabad",lt:"Haidarabadas",ru:"Хайдарабад"},iceland:{en:"Iceland",lt:"Islandija",ru:"Исландия"},india:{en:"India",lt:"Indija",ru:"Индия"},indonesia:{en:"Indonesia",lt:"Indonezija",ru:"Индонезия"},indore:{en:"Indore",lt:"Indauras",ru:"Индаур"},ionian_islands:{en:"Ionian Islands",lt:"Jonijos salos",ru:"Ионические острова"},iran:{en:"Iran",lt:"Iranas",ru:"Иран"},iraq:{en:"Iraq",lt:"Irakas",ru:"Ирак"},ireland:{en:"Ireland",lt:"Airija",ru:"Ирландия"},isle_of_man:{en:"Isle of Man",lt:"Meno Sala",ru:"Остров Мэн"},israel:{en:"Israel",lt:"Izraelis",ru:"Израиль"},italian_eritrea:{en:"Italian Eritrea",lt:"Italijos Eritrėja",ru:"Итальянская Эритрея"},italian_somaliland:{en:"Italian Somaliland",lt:"Italijos Somalilandas",ru:"Итальянское Сомали"},italy:{en:"Italy",lt:"Italija",ru:"Италия"},jaipur:{en:"Jaipur",lt:"Džaipuras",ru:"Джайпур"},jamaica:{en:"Jamaica",lt:"Jamaika",ru:"Ямайка"},jaora:{en:"Jaora",lt:"Džaura",ru:"Джаора"},japan:{en:"Japan",lt:"Japonija",ru:"Япония"},japanese_china:{en:"China - Japanese",lt:"Kinija - Japonų",ru:"Китай - Японский"},jersey:{en:"Jersey",lt:"Džersis",ru:"Джерси"},jodhpur:{en:"Jodhpur",lt:"Džodpuras",ru:"Джодхпур"},jordan:{en:"Jordan",lt:"Jordanija",ru:"Иордания"},julich_berg:{en:"Jülich-Berg",lt:"Julichas-Bergas",ru:"Юлих-Берг"},junagadh:{en:"Junagadh",lt:"Džūnagadas",ru:"Джунагадх"},katanga:{en:"Katanga",lt:"Katanga",ru:"Катанга"},kazakhstan:{en:"Kazakhstan",lt:"Kazachstanas",ru:"Казахстан"},kenya:{en:"Kenya",lt:"Kenija",ru:"Кения"},khiva:{en:"Khiva",lt:"Chivos chanatas",ru:"Хива"},khorezm:{en:"Khorezm People's Soviet Republic",lt:"Chorezmo Liaudies Sovietinė Respublika",ru:"Хорезмская НСР"},kiau_chau:{en:"Kiau Chau",lt:"Dziaodžou",ru:"Цзяо-Чжоу"},kiribati:{en:"Kiribati",lt:"Kiribatis",ru:"Кирибати"},kokand:{en:"Kokand",lt:"Kokando chanatas",ru:"Коканд"},korea:{en:"Korea",lt:"Korėja",ru:"Корея"},krakow:{en:"Krakow",lt:"Krokuva",ru:"Краков"},kutch:{en:"Kutch",lt:"Kačas",ru:"Кач"},kuwait:{en:"Kuwait",lt:"Kuveitas",ru:"Кувейт"},kyrgyzstan:{en:"Kyrgyzstan",lt:"Kirgizija",ru:"Киргизия"},laos:{en:"Laos",lt:"Laosas",ru:"Лаос"},latvia:{en:"Latvia",lt:"Latvija",ru:"Латвия"},lebanon:{en:"Lebanon",lt:"Libanas",ru:"Ливан"},lesotho:{en:"Lesotho",lt:"Lesotas",ru:"Лесото"},liberia:{en:"Liberia",lt:"Liberija",ru:"Либерия"},libya:{en:"Libya",lt:"Libija",ru:"Ливия"},liechtenstein:{en:"Liechtenstein",lt:"Lichtenšteinas",ru:"Лихтенштейн"},liege:{en:"Liège",lt:"Lježas",ru:"Льеж"},lippe:{en:"Lippe",lt:"Lipė",ru:"Липпе"},lithuania:{en:"Lithuania",lt:"Lietuva",ru:"Литва"},livonia:{en:"Livonia",lt:"Livonija",ru:"Ливония"},lombardy_venetia:{en:"Lombardy-Venetia",lt:"Lombardija-Venecija",ru:"Ломбардия-Венеция"},lubeck:{en:"Lübeck",lt:"Liubekas",ru:"Любек"},lucca:{en:"Lucca",lt:"Luka",ru:"Лукка"},lundy:{en:"Lundy",lt:"Landis",ru:"Ланди"},luxembourg:{en:"Luxembourg",lt:"Liuksemburgas",ru:"Люксембург"},macau:{en:"Macau",lt:"Makao",ru:"Макао"},macedonia:{en:"North Macedonia",lt:"Šiaurės Makedonija",ru:"Северная Македония"},madagascar:{en:"Madagascar",lt:"Madagaskaras",ru:"Мадагаскар"},madeira_islands:{en:"Madeira Islands",lt:"Madeira",ru:"Мадейра"},mainz:{en:"Mainz",lt:"Maincas",ru:"Майнц"},majorca:{en:"Majorca",lt:"Maljorka",ru:"Мальорка"},malawi:{en:"Malawi",lt:"Malavis",ru:"Малави"},malaya:{en:"Malaya",lt:"Malaja",ru:"Малайя"},malaya_british_borneo:{en:"Malaya and British Borneo",lt:"Malaja ir Britų Borneo",ru:"Малайя и Британское Борнео"},malaysia:{en:"Malaysia",lt:"Malaizija",ru:"Малайзия"},maldives:{en:"Maldives",lt:"Maldyvai",ru:"Мальдивы"},mali:{en:"Mali",lt:"Malis",ru:"Мали"},malta:{en:"Malta",lt:"Malta",ru:"Мальта"},mantua:{en:"Mantua",lt:"Mantuja",ru:"Мантуя"},marshall_islands:{en:"Marshall Islands",lt:"Maršalo salos",ru:"Маршалловы Острова"},martinique:{en:"Martinique",lt:"Martinika",ru:"Мартиника"},mauritania:{en:"Mauritania",lt:"Mauritanija",ru:"Мавритания"},mauritius:{en:"Mauritius",lt:"Mauricijus",ru:"Маврикий"},mecklenburg_schwerin:{en:"Mecklenburg-Schwerin",lt:"Meklenburgas-Šverinas",ru:"Мекленбург-Шверин"},mecklenburg_strelitz:{en:"Mecklenburg-Strelitz",lt:"Meklenburgas-Štrelicas",ru:"Мекленбург-Стрелиц"},mewar:{en:"Mewar",lt:"Mevaras",ru:"Мевар"},mexico:{en:"Mexico",lt:"Meksika",ru:"Мексика"},milan:{en:"Milan",lt:"Milanas",ru:"Милан"},moldavia_and_wallachia:{en:"Moldavia and Wallachia",lt:"Moldova ir Valakija",ru:"Молдавия и Валахия"},moldova:{en:"Moldova",lt:"Moldavija",ru:"Молдавия"},mombasa:{en:"Mombasa",lt:"Mombasa",ru:"Момбаса"},monaco:{en:"Monaco",lt:"Monakas",ru:"Монако"},mongolia:{en:"Mongolia",lt:"Mongolija",ru:"Монголия"},montenegro:{en:"Montenegro",lt:"Juodkalnija",ru:"Черногория"},montserrat:{en:"Montserrat",lt:"Montseratas",ru:"Монтсеррат"},morocco:{en:"Morocco",lt:"Marokas",ru:"Марокко"},mozambique:{en:"Mozambique",lt:"Mozambikas",ru:"Мозамбик"},mughal_empire:{en:"Mughal Empire",lt:"Mogolų imperija",ru:"Империя Великих Моголов"},myanmar:{en:"Myanmar",lt:"Mianmaras",ru:"Мьянма"},nagorno_karabakh:{en:"Nagorno-Karabakh",lt:"Kalnų Karabachas",ru:"Нагорный Карабах"},namibia:{en:"Namibia",lt:"Namibija",ru:"Намибия"},naples:{en:"Naples",lt:"Neapolis",ru:"Неаполь"},nassau:{en:"Nassau",lt:"Nasau",ru:"Нассау"},nassau_usingen:{en:"Nassau-Usingen",lt:"Nasau-Uzingenas",ru:"Нассау-Узинген"},nassau_weilburg:{en:"Nassau-Weilburg",lt:"Nasau-Veilburgas",ru:"Нассау-Вайльбург"},nauru:{en:"Nauru",lt:"Nauru",ru:"Науру"},navarra:{en:"Navarra",lt:"Navara",ru:"Наварра"},nawanagar:{en:"Nawanagar",lt:"Navanagaras",ru:"Наванагар"},nepal:{en:"Nepal",lt:"Nepalas",ru:"Непал"},netherlands:{en:"Netherlands",lt:"Nyderlandai",ru:"Нидерланды"},netherlands_antilles:{en:"Netherlands Antilles",lt:"Nyderlandų Antilai",ru:"Нидерландские Антильские острова"},netherlands_east_indies:{en:"Netherlands East Indies",lt:"Nyderlandų Rytų Indijos",ru:"Голландская Ост-Индия"},new_caledonia:{en:"New Caledonia",lt:"Naujoji Kaledonija",ru:"Новая Каледония"},new_guinea:{en:"New Guinea",lt:"Naujoji Gvinėja",ru:"Новая Гвинея"},new_hebrides:{en:"New Hebrides",lt:"Naujieji Hebridai",ru:"Новые Гебриды"},new_zealand:{en:"New Zealand",lt:"Naujoji Zelandija",ru:"Новая Зеландия"},newfoundland:{en:"Newfoundland",lt:"Niufaundlandas",ru:"Ньюфаундленд"},nicaragua:{en:"Nicaragua",lt:"Nikaragva",ru:"Никарагуа"},niger:{en:"Niger",lt:"Nigeris",ru:"Нигер"},nigeria:{en:"Nigeria",lt:"Nigerija",ru:"Нигерия"},niue:{en:"Niue",lt:"Niujė",ru:"Ниуэ"},north_borneo:{en:"North Borneo",lt:"Šiaurės Borneo",ru:"Северное Борнео"},north_korea:{en:"North Korea",lt:"Šiaurės Korėja",ru:"Северная Корея"},norway:{en:"Norway",lt:"Norvegija",ru:"Норвегия"},oldenburg:{en:"Oldenburg",lt:"Oldenburgas",ru:"Ольденбург"},oman:{en:"Oman",lt:"Omanas",ru:"Оман"},order_of_malta:{en:"Order of Malta",lt:"Maltos ordinas",ru:"Мальтийский орден"},ottoman_empire:{en:"Ottoman Empire",lt:"Osmanų imperija",ru:"Османская империя"},oudh:{en:"Oudh (Awadh)",lt:"Audas (Awadh)",ru:"Ауд (Авадх)"},pakistan:{en:"Pakistan",lt:"Pakistanas",ru:"Пакистан"},palatinate:{en:"Palatinate",lt:"Pfalco kurfiurstystė",ru:"Курпфальц"},palatine_zweibrucken:{en:"Palatine Zweibrücken",lt:"Pfalcas-Cveibriukenas",ru:"Пфальц-Цвейбрюккен"},palau:{en:"Palau",lt:"Palau",ru:"Палау"},palestine:{en:"Palestine",lt:"Palestina",ru:"Палестина"},panama:{en:"Panama",lt:"Panama",ru:"Панама"},papal_states:{en:"Papal States",lt:"Popiežiaus valstybė ",ru:"Папская область"},papua_new_guinea:{en:"Papua New Guinea",lt:"Papua Naujoji Gvinėja",ru:"Папуа - Новая Гвинея"},paraguay:{en:"Paraguay",lt:"Paragvajus",ru:"Парагвай"},parma:{en:"Parma",lt:"Parma",ru:"Парма"},peru:{en:"Peru",lt:"Peru",ru:"Перу"},philippines:{en:"Philippines",lt:"Filipinai",ru:"Филиппины"},piedmont:{en:"Piedmont",lt:"Pjemontas",ru:"Пьемонт"},pitcairn_islands:{en:"Pitcairn Islands",lt:"Pitkerno Salos",ru:"Острова Питкэрн"},poland:{en:"Poland",lt:"Lenkija",ru:"Польша"},porbandar:{en:"Porbandar",lt:"Porbandaras",ru:"Порбандар"},portugal:{en:"Portugal",lt:"Portugalija",ru:"Португалия"},portuguese_india:{en:"India - Portuguese",lt:"Indija - Portugalų",ru:"Индия - Португальская"},portuguese_timor:{en:"Portuguese Timor",lt:"Portugalijos Timoras",ru:"Португальский Тимор"},prussia:{en:"Prussia",lt:"Prūsija",ru:"Пруссия"},pudukkottai:{en:"Pudukkottai",lt:"Pudukotajus",ru:"Пудуккоттай"},puerto_rico:{en:"Puerto Rico",lt:"Puerto Rikas",ru:"Пуэрто-Рико"},qatar:{en:"Qatar",lt:"Kataras",ru:"Катар"},qatar_dubai:{en:"Qatar and Dubai",lt:"Kataras ir Dubajus",ru:"Катар и Дубай"},ras_al_khaimah:{en:"Ras Al Khaimah",lt:"Ras al Chaima",ru:"Рас-эль-Хайма"},ratlam:{en:"Ratlam",lt:"Ratlamas",ru:"Ратлам"},reunion:{en:"Réunion",lt:"Reunjonas",ru:"Реюньон"},reuss_gera:{en:"Reuss-Gera",lt:"Roisas-Gėra",ru:"Рейсс-Гера"},reuss_greiz:{en:"Reuss-Greiz",lt:"Roisas-Greicas",ru:"Рейсс-Грейц"},rhodesia:{en:"Rhodesia",lt:"Rodezija",ru:"Родезия"},rhodesia_nyasaland:{en:"Rhodesia and Nyasaland",lt:"Rodezija ir Njasalendas",ru:"Родезия и Ньясаленд"},roman_republic:{en:"Roman Republic",lt:"Romos respublika",ru:"Римская республика"},romania:{en:"Romania",lt:"Rumunija",ru:"Румыния"},ruanda_burundi:{en:"Ruanda-Burundi",lt:"Ruanda-Burundis",ru:"Руанда-Бурунди"},ruanda_urundi:{en:"Ruanda-Urundi",lt:"Ruanda-Urundis",ru:"Руанда-Урунди"},russia:{en:"Russia",lt:"Rusija",ru:"Россия"},rwanda:{en:"Rwanda",lt:"Ruanda",ru:"Руанда"},ryukyu:{en:"Ryukyu",lt:"Riūkiū",ru:"Рюкю"},saar:{en:"Saar",lt:"Saras",ru:"Саар"},saint_helena:{en:"Saint Helena",lt:"Šv. Elenos sala",ru:"Остров Святой Елены"},saint_helena_ascension:{en:"Saint Helena and Ascension",lt:"Šv. Elenos ir Dangun Žengimo salos",ru:"Острова Святой Елены и Вознесения"},saint_kitts_nevis:{en:"Saint Kitts and Nevis",lt:"Sent Kitsas ir Nevis",ru:"Сент-Китс и Невис"},saint_lucia:{en:"Saint Lucia",lt:"Sent Lusija",ru:"Сент-Люсия"},saint_pierre_miquelon:{en:"Saint-Pierre and Miquelon",lt:"Sen Pjeras ir Mikelonas",ru:"Сен-Пьер и Микелон"},saint_vincent_grenadines:{en:"Saint Vincent and the Grenadines",lt:"Sent Vinsentas ir Grenadinai",ru:"Сент-Винсент и Гренадины"},salzburg:{en:"Salzburg",lt:"Zalcburgas",ru:"Зальцбург"},samoa:{en:"Samoa",lt:"Samoa",ru:"Самоа"},san_marino:{en:"San Marino",lt:"San Marinas",ru:"Сан-Марино"},sao_tome_principe:{en:"São Tomé and Príncipe",lt:"San Tomė ir Prinsipė",ru:"Сан-Томе и Принсипи"},sarawak:{en:"Sarawak",lt:"Saravakas",ru:"Саравак"},sardinia:{en:"Sardinia",lt:"Sardinija",ru:"Сардиния"},saudi_arabia:{en:"Saudi Arabia",lt:"Saudo Arabija",ru:"Саудовская Аравия"},saxe_altenburg:{en:"Saxe-Altenburg",lt:"Sakse-Altenburgas",ru:"Саксен-Альтенбург"},saxe_coburg_gotha:{en:"Saxe-Coburg and Gotha",lt:"Sakse-Koburgas ir Gota",ru:"Саксен-Кобург-Гота"},saxe_gotha_altenburg:{en:"Saxe-Gotha-Altenburg",lt:"Saksonija-Gota-Altenburgas",ru:"Саксен-Гота-Альтенбург"},saxe_hildburghausen:{en:"Saxe-Hildburghausen",lt:"Sakse-Hildburghauzenas",ru:"Саксен-Гильдбурггаузен"},saxe_meiningen:{en:"Saxe-Meiningen",lt:"Sakse-Meiningenas",ru:"Саксен-Мейнинген"},saxe_weimar_eisenach:{en:"Saxe-Weimar-Eisenach",lt:"Sakse-Veimaras-Eizenachas",ru:"Саксен-Веймар-Эйзенах"},saxony:{en:"Saxony",lt:"Saksonija",ru:"Саксония"},schaumburg_lippe:{en:"Schaumburg-Lippe",lt:"Šaumburgas-Lipė",ru:"Шаумбург-Липпе"},schleswig_holstein:{en:"Schleswig-Holstein",lt:"Šlėzvigas-Holšteinas",ru:"Шлезвиг-Гольштейн"},schwarzburg_rudolstadt:{en:"Schwarzburg-Rudolstadt",lt:"Švarcburgas-Rudolštatas",ru:"Шварцбург-Рудольштадт"},schwarzburg_sondershausen:{en:"Schwarzburg-Sondershausen",lt:"Švarcburgas-Zondershauzenas",ru:"Шварцбург-Зондерсгаузен"},scotland:{en:"Scotland",lt:"Škotija",ru:"Шотландия"},sealand:{en:"Sealand",lt:"Sylandas",ru:"Силенд"},seborga:{en:"Seborga",lt:"Seborga",ru:"Себорга"},senegal:{en:"Senegal",lt:"Senegalas",ru:"Сенегал"},serbia:{en:"Serbia",lt:"Serbija",ru:"Сербия"},seychelles:{en:"Seychelles",lt:"Seišeliai",ru:"Сейшелы"},sharjah:{en:"Sharjah",lt:"Šardža",ru:"Шарджа"},sicily:{en:"Sicily",lt:"Sicilija",ru:"Сицилия"},sierra_leone:{en:"Sierra Leone",lt:"Siera Leonė",ru:"Сьерра-Леоне"},silesia:{en:"Silesia",lt:"Silezija",ru:"Силезия"},singapore:{en:"Singapore",lt:"Singapūras",ru:"Сингапур"},slovakia:{en:"Slovakia",lt:"Slovakija",ru:"Словакия"},slovenia:{en:"Slovenia",lt:"Slovėnija",ru:"Словения"},solomon_islands:{en:"Solomon Islands",lt:"Saliamono Salos",ru:"Соломоновы Острова"},somalia:{en:"Somalia",lt:"Somalis",ru:"Сомали"},somaliland:{en:"Somaliland",lt:"Somalilandas",ru:"Сомалиленд"},south_africa:{en:"South Africa",lt:"Pietų Afrika",ru:"ЮАР"},south_arabia:{en:"South Arabia",lt:"Pietų Arabija",ru:"Южная Аравия"},south_georgia:{en:"South Georgia",lt:"Pietų Džordžija",ru:"Южная Георгия"},south_korea:{en:"South Korea",lt:"Pietų Korėja",ru:"Южная Корея"},south_sudan:{en:"South Sudan",lt:"Pietų Sudanas",ru:"Южный Судан"},south_vietnam:{en:"South Vietnam",lt:"Pietų Vietnamas",ru:"Южный Вьетнам"},south_yemen:{en:"South Yemen",lt:"Pietų Jemenas",ru:"Южный Йемен"},southern_rhodesia:{en:"Southern Rhodesia",lt:"Pietų Rodezija",ru:"Южная Родезия"},spain:{en:"Spain",lt:"Ispanija",ru:"Испания"},spainish_provinces:{en:"Spanish provinces",lt:"Ispanijos provincijos",ru:"Испанские провинции"},span_civil_war:{en:"Spain - Civil war",lt:"Ispanija - pilietinis karas",ru:"Испания - Гражданская война"},spanish_netherlands:{en:"Spanish Netherlands",lt:"Ispanijos Nyderlandai",ru:"Испанские Нидерланды"},spitsbergen:{en:"Spitsbergen",lt:"Špicbergenas",ru:"Шпицберген"},sri_lanka:{en:"Sri Lanka",lt:"Šri Lanka",ru:"Шри-Ланка"},straits_settlements:{en:"Straits Settlements",lt:"Sąsiaurio gyvenvietės",ru:"Стрейтс Сетлментс"},sudan:{en:"Sudan",lt:"Sudanas",ru:"Судан"},suriname:{en:"Suriname",lt:"Surinamas",ru:"Суринам"},swaziland:{en:"Eswatini (Swaziland)",lt:"Esvatinis (Svazilandas)",ru:"Эсватини (Свазиленд)"},sweden:{en:"Sweden",lt:"Švedija",ru:"Швеция"},swiss_cantons:{en:"Swiss Cantons",lt:"Šveicarijos kantonai",ru:"Швейцарские кантоны"},switzerland:{en:"Switzerland",lt:"Šveicarija",ru:"Швейцария"},syria:{en:"Syria",lt:"Sirija",ru:"Сирия"},taiwan:{en:"Taiwan",lt:"Taivanas",ru:"Тайвань"},tajikistan:{en:"Tajikistan",lt:"Tadžikistanas",ru:"Таджикистан"},tannu_tuva:{en:"Tannu Tuva",lt:"Tanu Tuva",ru:"Танну-Тува"},tanzania:{en:"Tanzania",lt:"Tanzanija",ru:"Танзания"},thailand:{en:"Thailand",lt:"Tailandas",ru:"Таиланд"},third_reich:{en:"Germany - Third Reich",lt:"Trečiasis Reichas",ru:"Германия - Третий рейх"},tibet:{en:"Tibet",lt:"Tibetas",ru:"Тибет"},togo:{en:"Togo",lt:"Togas",ru:"Того"},tokelau:{en:"Tokelau",lt:"Tokelau",ru:"Токелау"},tonga:{en:"Tonga",lt:"Tonga",ru:"Тонга"},tonk:{en:"Tonk",lt:"Tonkas",ru:"Тонк"},tonkin:{en:"Tonkin",lt:"Tonkinas",ru:"Тонкин"},transnistria:{en:"Transnistria",lt:"Padniestrė",ru:"Приднестровье"},transylvania:{en:"Transylvania",lt:"Transilvanija",ru:"Трансильвания"},travancore:{en:"Travancore",lt:"Travankoras",ru:"Траванкор"},trinidad_tobago:{en:"Trinidad and Tobago",lt:"Trinidadas ir Tobagas",ru:"Тринидад и Тобаго"},tristan_da_cunha:{en:"Tristan da Cunha",lt:"Tristanas da Kunja",ru:"Тристан-да-Кунья"},tunisia:{en:"Tunisia",lt:"Tunisas",ru:"Тунис"},turkey:{en:"Turkey",lt:"Turkija",ru:"Турция"},turkmenistan:{en:"Turkmenistan",lt:"Turkmėnistanas",ru:"Туркмения"},turks_caicos_islands:{en:"Turks and Caicos Islands",lt:"Terkso ir Kaikoso Salos",ru:"Тёркс и Кайкос"},tuscany:{en:"Tuscany",lt:"Toskana",ru:"Тоскана"},tuvalu:{en:"Tuvalu",lt:"Tuvalu",ru:"Тувалу"},two_sicilies:{en:"Two Sicilies",lt:"Dvi Sicilijos",ru:"Две Сицилии"},uganda:{en:"Uganda",lt:"Uganda",ru:"Уганда"},ukraine:{en:"Ukraine",lt:"Ukraina",ru:"Украина"},umm_al_qaiwain:{en:"Umm Al Qaiwain",lt:"Um al Kuvainas",ru:"Умм-эль-Кайвайн"},united_arab_emirates:{en:"United Arab Emirates",lt:"Jungtiniai Arabų Emyratai",ru:"ОАЭ"},united_kingdom:{en:"United Kingdom",lt:"Jungtinė Karalystė",ru:"Великобритания"},uruguay:{en:"Uruguay",lt:"Urugvajus",ru:"Уругвай"},usa:{en:"USA",lt:"JAV",ru:"США"},ussr:{en:"USSR",lt:"TSRS",ru:"СССР"},uzbekistan:{en:"Uzbekistan",lt:"Uzbekistanas",ru:"Узбекистан"},vanuatu:{en:"Vanuatu",lt:"Vanuatu",ru:"Вануату"},vatican_city:{en:"Vatican City",lt:"Vatikanas",ru:"Ватикан"},venezuela:{en:"Venezuela",lt:"Venesuela",ru:"Венесуэла"},venice:{en:"Venice",lt:"Venecija",ru:"Венеция"},vietnam:{en:"Vietnam",lt:"Vietnamas",ru:"Вьетнам"},virgin_islands_british:{en:"British Virgin Islands",lt:"Britų Mergelės salos",ru:"Британские Виргинские острова"},waldeck:{en:"Waldeck",lt:"Valdekas",ru:"Вальдек"},west_congo:{en:"Congo Republic",lt:"Kongas",ru:"Республика Конго"},western_africa:{en:"Western Africa (BCEAO)",lt:"Vakarų Afrika (BCEAO)",ru:"Западная Африка (BCEAO)"},western_sahara:{en:"Western Sahara",lt:"Vakarų Sachara",ru:"Западная Сахара"},westphalia:{en:"Westphalia",lt:"Vestfalija",ru:"Вестфалия"},wurttemberg:{en:"Württemberg",lt:"Viurtembergas",ru:"Вюртемберг"},wurzburg:{en:"Würzburg",lt:"Viurcburgas",ru:"Вюрцбург"},yemen:{en:"Yemen",lt:"Jemenas",ru:"Йемен"},yugoslavia:{en:"Yugoslavia",lt:"Jugoslavija",ru:"Югославия"},zaire:{en:"Zaire",lt:"Zairas",ru:"Заир"},zambia:{en:"Zambia",lt:"Zambija",ru:"Замбия"},zanzibar:{en:"Zanzibar",lt:"Zanzibaras",ru:"Занзибар"},zar:{en:"South African Republic",lt:"Pietų Afrikos Respublika",ru:"Южно-Африканская Республика"},zimbabwe:{en:"Zimbabwe",lt:"Zimbabvė",ru:"Зимбабве"}};const r=Object.fromEntries(Object.entries(a.countryNames).flatMap((([e,a])=>Object.values(a).map((a=>[a,e])))));a.getCountryId=function(e){return e.includes(",")&&(e=e.split(",").pop()?.trim()||""),r[e]}},921:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.Melanesia=a.Australia_and_New_Zealand=a.Oceania=a.Southern_America=a.Central_America=a.Caribbean=a.Central_America_and_Caribbean=a.Northern_America=a.America=a.Western_Africa=a.Southern_Africa=a.Southeast_Africa=a.Central_Africa=a.Central_and_Southern_Africa=a.Nile_Valley=a.Indian_Ocean_Islands=a.Horn_of_Africa=a.East_African_Community=a.Eastern_Africa=a.Northern_Africa=a.Northern_and_Western_Africa=a.Africa=a.Western_Asia=a.Southern_Asia=a.Maritime_Southeast_Asia=a.Mainland_Southeast_Asia=a.Southeast_Asia=a.Eastern_Asia=a.Central_Asia=a.Central_and_Eastern_Asia=a.Northern_Asia=a.Asia=a.Southwest_Europe=a.Southeast_Europe=a.Southern_Europe=a.Western_Europe=a.Central_Europe=a.Eastern_Europe=a.Northern_Europe=a.Russian_Federation=a.Russian_Empire=a.Russia=a.United_Kingdom=a.Lithuania=a.Germany=a.Poland=a.Europe=a.Euro_L=a.Euro_A=a.Euro=void 0,a.regionNames=a.regionTree=a.PayPal_UK=a.PayPal_Europe=a.Worldwide=a.Antarctica=a.Polynesia=a.Micronesia=void 0,a.Euro="Euro",a.Euro_A="A-K",a.Euro_L="L-Z",a.Europe="Europe",a.Poland="Poland",a.Germany="Germany",a.Lithuania="Lithuania",a.United_Kingdom="United Kingdom",a.Russia="Russia",a.Russian_Empire="Russian Empire and USSR",a.Russian_Federation="Russian Federation",a.Northern_Europe="Northern Europe",a.Eastern_Europe="Eastern Europe",a.Central_Europe="Central Europe",a.Western_Europe="Western Europe",a.Southern_Europe="Southern Europe",a.Southeast_Europe="Southeast Europe",a.Southwest_Europe="Southwest Europe",a.Asia="Asia",a.Northern_Asia="Northern Asia",a.Central_and_Eastern_Asia="Central and Eastern Asia",a.Central_Asia="Central Asia",a.Eastern_Asia="Eastern Asia",a.Southeast_Asia="Southeast Asia",a.Mainland_Southeast_Asia="Mainland Southeast Asia",a.Maritime_Southeast_Asia="Maritime Southeast Asia",a.Southern_Asia="Southern Asia",a.Western_Asia="Western Asia",a.Africa="Africa",a.Northern_and_Western_Africa="Northern and Western Africa",a.Northern_Africa="Northern Africa",a.Eastern_Africa="Eastern Africa",a.East_African_Community="East African Community",a.Horn_of_Africa="Horn of Africa",a.Indian_Ocean_Islands="Indian Ocean Islands",a.Nile_Valley="Nile Valley",a.Central_and_Southern_Africa="Central and Southern Africa",a.Central_Africa="Central Africa",a.Southeast_Africa="Southeast Africa",a.Southern_Africa="Southern Africa",a.Western_Africa="Western Africa",a.America="America",a.Northern_America="Northern America",a.Central_America_and_Caribbean="Central America and Caribbean",a.Caribbean="Caribbean",a.Central_America="Central America",a.Southern_America="Southern America",a.Oceania="Australia and Oceania",a.Australia_and_New_Zealand="Australia and New Zealand",a.Melanesia="Melanesia",a.Micronesia="Micronesia",a.Polynesia="Polynesia",a.Antarctica="Antarctica",a.Worldwide="Worldwide",a.PayPal_Europe="PayPal - Europe",a.PayPal_UK="PayPal - UK",a.regionTree={[a.Euro]:{[a.Euro_A]:{},[a.Euro_L]:{}},[a.Europe]:{[a.Lithuania]:{},[a.Poland]:{},[a.Russian_Empire]:{},[a.Russian_Federation]:{},[a.Germany]:{},[a.Eastern_Europe]:{},[a.Central_Europe]:{},[a.Northern_Europe]:{},[a.Southeast_Europe]:{},[a.Southwest_Europe]:{},[a.Western_Europe]:{},[a.United_Kingdom]:{}},[a.Asia]:{[a.Central_and_Eastern_Asia]:{},[a.Southeast_Asia]:{},[a.Southern_Asia]:{},[a.Western_Asia]:{},[a.Northern_Asia]:{}},[a.Africa]:{[a.Northern_and_Western_Africa]:{},[a.Eastern_Africa]:{},[a.Central_and_Southern_Africa]:{}},[a.America]:{[a.Northern_America]:{},[a.Central_America_and_Caribbean]:{},[a.Southern_America]:{}},[a.Oceania]:{}},a.regionNames={[a.Euro]:{lt:"Eurai"},[a.Euro_A]:{lt:a.Euro_A},[a.Euro_L]:{lt:a.Euro_L},[a.Europe]:{lt:"Europa"},[a.Poland]:{lt:"Lenkija"},[a.Germany]:{lt:"Vokietija"},[a.Lithuania]:{lt:"Lietuva"},[a.United_Kingdom]:{lt:"Jungtinė Karalystė"},[a.Russia]:{lt:"Rusija"},[a.Russian_Empire]:{lt:"Rusijos Imperija ir TSRS"},[a.Russian_Federation]:{lt:"Rusijos Federacija"},[a.Northern_Europe]:{lt:"Šiaurės Europa"},[a.Eastern_Europe]:{lt:"Rytų Europa"},[a.Central_Europe]:{lt:"Vidurio Europa"},[a.Western_Europe]:{lt:"Vakarų Europa"},[a.Southern_Europe]:{lt:"Pietų Europa"},[a.Southeast_Europe]:{lt:"Pietryčių Europa"},[a.Southwest_Europe]:{lt:"Pietvakarių Europa"},[a.Asia]:{lt:"Azija"},[a.Northern_Asia]:{lt:"Šiaurės Azija"},[a.Central_and_Eastern_Asia]:{lt:"Vidurio ir Rytų Azija"},[a.Central_Asia]:{lt:"Vidurio Azija"},[a.Eastern_Asia]:{lt:"Rytų Azija"},[a.Southeast_Asia]:{lt:"Pietryčių Azija"},[a.Mainland_Southeast_Asia]:{lt:"Žemyninė Pietryčių Azija"},[a.Maritime_Southeast_Asia]:{lt:"Jūrinė Pietryčių Azija"},[a.Southern_Asia]:{lt:"Pietų Azija"},[a.Western_Asia]:{lt:"Vakarų Azija"},[a.Africa]:{lt:"Afrika"},[a.Northern_and_Western_Africa]:{lt:"Šiaurės ir Vakarų Afrika"},[a.Northern_Africa]:{lt:"Šiaurės Afrika"},[a.Eastern_Africa]:{lt:"Rytų Afrika"},[a.East_African_Community]:{lt:"Rytų Afrikos Bendrija"},[a.Horn_of_Africa]:{lt:"Afrikos Kyšulys"},[a.Indian_Ocean_Islands]:{lt:"Indijos Vandenyno Salos"},[a.Nile_Valley]:{lt:"Nilo Slėnis"},[a.Central_and_Southern_Africa]:{lt:"Vidurio ir Pietų Afrika"},[a.Central_Africa]:{lt:"Vidurio Afrika"},[a.Southeast_Africa]:{lt:"Pietryčių Afrika"},[a.Southern_Africa]:{lt:"Pietų Afrika"},[a.Western_Africa]:{lt:"Vakarų Afrika"},[a.America]:{lt:"Amerika"},[a.Northern_America]:{lt:"Šiaurės Amerika"},[a.Central_America_and_Caribbean]:{lt:"Vidurio Amerika ir Karibai"},[a.Caribbean]:{lt:"Karibai"},[a.Central_America]:{lt:"Vidurio Amerika"},[a.Southern_America]:{lt:"Pietų Amerika"},[a.Oceania]:{lt:"Australija ir Okeanija"},[a.Australia_and_New_Zealand]:{lt:"Australija ir Naujoji Zelandija"},[a.Melanesia]:{lt:"Melanezija"},[a.Micronesia]:{lt:"Mikronezija"},[a.Polynesia]:{lt:"Polinezija"},[a.Antarctica]:{lt:"Antarktida"},[a.Worldwide]:{lt:"Viso Pasaulio"}}},759:(e,a)=>{"use strict";async function t(e,a="GET",t=null,n=!0){const r=await fetch(e,{method:a,body:t});if(!r.ok)throw new Error(`${r.status}: ${r.statusText}`);return n&&r.redirected&&location.href!==r.url&&history.pushState({},"",r.url),r}async function n(e,a=null,n=!0){return await(await t(e,"GET",a,n)).text()}async function r(e,a=null,n=!0){return await(await t(e,"POST",a,n)).text()}function i(e){const a=document.createElement("template");return a.innerHTML=e,a.content}Object.defineProperty(a,"__esModule",{value:!0}),a.postFragment=a.getFragment=a.documentFragment=a.postText=a.getText=a.postJson=a.getJson=a.post=a.get=void 0,a.get=async function(e,a=null){return await fetch(e,{method:"GET",body:a})},a.post=async function(e,a=null){return await fetch(e,{method:"POST",body:a})},a.getJson=async function(e,a=null,n=!0){return await(await t(e,"GET",a,n)).json()},a.postJson=async function(e,a=null,n=!0){return await(await t(e,"POST",a,n)).json()},a.getText=n,a.postText=r,a.documentFragment=i,a.getFragment=async function(e,a=null,t=!0){return i(await n(e,a,t))},a.postFragment=async function(e,a=null,t=!0){return i(await r(e,a,t))}},659:function(e,a,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),a.CoinForm=void 0;const r=n(t(602)),i=n(t(916)),o=n(t(584)),s=n(t(238)),l=t(759),c=t(290),u=t(213),d=t(26),h=t(131);class p extends u.AbstractForm{constructor(){super(...arguments),this.addFormId="add-coin-form",this.editFormId="edit-coin-form",this.funcId="my-func-block",this.viewId="ucid-block",this.coinChooserId="coin-chooser-dialog"}async handle(){this.func=document.getElementById(this.funcId),this.func&&(this.coinChooser=document.getElementById(this.coinChooserId),await this.update())}async updateFragment(e){return this.func=(0,h.updateRequiredElement)(e,this.func),this.coinChooser=(0,h.updateOptionalElement)(e,this.coinChooser),await this.update()}async update(){if(this.func&&((0,h.show)(this.func),this.updateButtons(),this.addForm=this.func.querySelector(`#${this.addFormId} form`),this.editForm=this.func.querySelector(`#${this.editFormId} form`),this.form=this.editForm||this.addForm,this.form&&(this.view=this.func.querySelector((0,d.id)(this.viewId)),this.view&&(this.addPublicityToggle(),this.addReplacementToggle()),this.updateBuyDateInput(),this.addSyncConditionToColorTable(),await(0,h.handleFormSubmit)(this.form,(async()=>await this.updateFragment(await(0,l.postFragment)(location.href,new FormData(this.form))))),this.view)))for(const e of this.view.querySelectorAll("a[type=submit]"))await(0,h.handleLinkSubmit)(e,(async()=>await this.updateFragment(await(0,l.getFragment)(e.href))))}updateBuyDateInput(){if(this.form){const{buy_month:e,buy_year:a}=this.form;let{buy_year_month:t}=this.form;(0,h.hide)(a,e),t||(a.insertAdjacentHTML("afterend","<input id='buy_year_month' name='buy_year_month' type='month'/>"),t=this.form.buy_year_month),t.max=(0,h.todayMonth)(),t.addEventListener("change",(n=>{(0,h.cancel)(n);const r=t.value||(0,h.todayMonth)();return[a.value,e.value]=r.split("-",2),!1}))}}addSyncConditionToColorTable(){if(this.form){const e=this.form.condition,a=this.form.color;a.nextElementSibling?.classList.add("btn-set");const t=this.form.querySelector((0,d.id)("edit-set-color")),n=this.form.querySelectorAll('table div[class^="marked-"]');for(const a of n)a.matches("#set-color")||(a.classList.add("btn-marker"),a.addEventListener("click",(a=>{const t=a.target;let n=null;for(const e of t.classList)e.startsWith("marked-")&&(n=+e.split("-",3)[1]);n&&n in c.FormColorValues&&(e.value=`${c.FormColorValues[n]}`)})));e.addEventListener("change",(e=>{if(!t)return;const n=e.target;t.classList.remove(`marked-${a.value}`);const r=+n.value;r in c.FormValueColors&&(a.value=`${c.FormValueColors[r]}`),t.classList.add(`marked-${a.value}`)}))}}async postForm(){return!(!this.form||!await(0,l.postFragment)(location.href,new FormData(this.form)))||!!(0,h.reload)()}addPublicityToggle(){const e=this.view?.querySelector(".status-line .left"),a=this.view?.querySelector(".func-button");if(!e||!a)return;const t="coin-form-visibility";a.insertAdjacentHTML("afterbegin",`<button id='${t}' class='btn-l btn-i btn-narrow'/>`);const n=a.querySelector((0,d.id)(t));if(!n)return;const i=()=>{const a=this.form?.public?.checked;n.title=a?"Hide":"Show",n.innerHTML=a?r.default:s.default,n.classList.toggle("btn-blue",!a),n.classList.toggle("btn-gray",a),e.innerText=a?"Public":"Private",e.classList.toggle("status0",!a),e.classList.toggle("status1",a)};n.addEventListener("click",(async()=>{this.form&&(this.form.public.checked=!this.form.public.checked,await this.postForm()&&i())})),i()}addReplacementToggle(){if(!this.view)return;let e;for(const a of this.view.querySelectorAll(".status-line + table tr"))a.querySelector("span.status2")&&(e=a);const a=this.view.querySelector(".func-button");if(!a)return;const t="coin-form-replacement";a.insertAdjacentHTML("afterbegin",`<button id='${t}' class='btn-l btn-i btn-narrow'/>`);const n=a.querySelector((0,d.id)(t));if(!n)return;const r=()=>{const a=this.form?.replace?.checked;if(n.title=a?"Don't replace":"Replace",n.innerHTML=a?i.default:o.default,n.classList.toggle("btn-blue",!a),n.classList.toggle("btn-gray",a),a){if(!e){const a=this.view?.querySelector(".status-line + table tbody");a&&(a.insertAdjacentHTML("beforeend","<tr><td class='lgray-12' colspan='2'><span class='set status2 wrap' style='max-width: 232px;width: 232px;padding: 0;display: block;margin-top: 6px;'>Need to replace</span></td></tr>"),e=a.querySelector("tr:last-child"))}}else e&&(e.remove(),e=null)};n.addEventListener("click",(async()=>{this.form&&(this.form.replace.checked=!this.form.replace.checked,await this.postForm()&&r())})),r()}updateButtons(){const e=this.func?.querySelectorAll(".func-button .btn-l");if(e)for(const a of e)a.classList.add("btn-narrow"),a.matches("a")&&(a.classList.replace("btn-gray","btn-red"),a.setAttribute("type","submit"))}}a.CoinForm=p},290:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.ColorStyle=a.FormColorValues=a.FormValueColors=a.FormValueCondition=a.ConditionFormValues=a.ColorValues=a.ConditionValues=a.ConditionColors=void 0,a.ConditionColors={G:7,VG:8,F:9,VF:10,"VF+":10,XF:11,"XF+":11,UNC:12,PRF:3,BU:4},a.ConditionValues={G:1,VG:2,F:3,VF:4,XF:5,UNC:6,PRF:7,BU:8},a.ColorValues={7:1,8:2,9:3,10:4,11:5,12:6,3:7,4:8,1:9},a.ConditionFormValues={G:6,VG:5,F:4,VF:3,XF:2,UNC:1,PRF:7},a.FormValueCondition={6:"G",5:"VG",4:"F",3:"VF",2:"XF",1:"UNC",7:"PRF"},a.FormValueColors={6:7,5:8,4:9,3:10,2:11,1:12,7:3},a.FormColorValues={7:6,8:5,9:4,10:3,11:2,12:1,3:7},a.ColorStyle={7:"#EC7000",8:"#B36D00",9:"#AB8B00",10:"#636330",11:"#64992C",12:"#006633",3:"#0000CC",4:"#5229A3",1:"#5A6986",5:"#854F61",6:"#CC0000"}},799:(e,a)=>{"use strict";async function t(e){return await new Promise((a=>setTimeout((()=>a()),e)))}Object.defineProperty(a,"__esModule",{value:!0}),a.randomDelay=a.delay=void 0,a.delay=t,a.randomDelay=async function(e=1500,a=1500){const n=Math.round(a+Math.random()*e);return await t(n)}},526:(e,a)=>{"use strict";function t([e,a]){const t=a.options.size<=1;return`<div class='${a.direction||"left"} filter'>            <div data-filter='${e}' data-filter-placeholder='${a.placeholder}'${t?" data-filter-disabled":""} class='filter-box${t?" filter-box-disabled":a.value?" filter-box-active":""}' style='width: ${a.width-24}px;'>            <div class='${a.value?"blue-13 ":""}left'>${t?a.options.get([...a.options.keys()].filter((e=>""!==e)).pop()||"")||a.placeholder:a.value?a.options.get(a.value)||a.value:a.placeholder}</div>${!t&&(a.value?`<div class='right close' title='Clear filter' data-filter-clear='${e}'>×</div>`:"<div class='right'><span class='arrow ab'></span></div>")||""}</div>        <div class='drop hide filter-dialog' data-filter-dialog='${e}' style='width: ${a.width}px;'>            ${[["","All"],...a.options.entries()].map((([a,t])=>`<a class='list-link' data-filter-by='${e}' data-filter-value='${a}'>                    <span class='left gray-13 wrap' style='max-width:140px;'>${t}</span></a>`)).join("")}        </div></div>`}Object.defineProperty(a,"__esModule",{value:!0}),a.renderFilters=a.renderFilter=a.Filter=void 0,function(e){e.COUNTRY="country",e.YEAR="year",e.VALUE="value",e.KM="km"}(a.Filter||(a.Filter={})),a.renderFilter=t,a.renderFilters=function(e){return`<div class='left filter-container filters'>${[...e.entries()].map(t).join("")}</div>`}},213:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.AbstractForm=void 0;a.AbstractForm=class{get mainId(){return""}get formId(){return""}}},691:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.addGalleryVisibilityToggle=void 0;const n=t(759),r=t(799),i=document.getElementById("gallery");let o,s;function l(){o=i?.querySelectorAll(".coin .desc-block span.status0"),s=i?.querySelectorAll(".coin .desc-block span.status1")}async function c(e,a,t){const r=a.querySelector("input[name=public]");return r&&(r.checked=t),await(0,n.post)(e,new FormData(a))}function u(e,a,t,n,r,i){const o=`button-${a.toLowerCase()}`;let s=document.getElementById(o);s||(e.insertAdjacentHTML("beforeend",`<button id='${o}' class='btn-l ${t}' style='padding: 0 14px; height: 26px'>${a} <small></small></button>`),s=document.getElementById(o),s.addEventListener("click",(()=>confirm(`Are you sure to ${a.toLowerCase()}?`)&&i(e,n))));const l=s.querySelector("small");return l&&(l.textContent=`(${r})`),s.style.display=r?"block":"none",s}function d(e,a){u(e,"Show","btn-blue",!0,o?.length||0,a),u(e,"Hide","btn-gray",!1,s?.length||0,a)}async function h(e,a){const t="status"+(a?1:0),i="status"+(a?0:1),u=a?"Public":"Private",p=a?o:s;if(p)for await(const o of p){const s=o.parentElement?.querySelector(".coin-desc div a")?.href;if(!s)continue;const p=await(0,n.get)(s),m=await p.text(),f=document.createElement("template");f.innerHTML=m;const _=f.content.getElementById("edit-coin-form")||document.getElementById("add-coin-form");if(!_)continue;const g=_.querySelector("form");g&&(await c(s,g,a),o.classList.replace(i,t),o.textContent=u,l(),d(e,h),await(0,r.randomDelay)())}}a.addGalleryVisibilityToggle=function(){l();const e="button-container",a=document.getElementById("sort-filter")?.parentElement;a?.insertAdjacentHTML("afterend","<div id='button-container' class='left filter-container' style='float:right'>");const t=document.getElementById(e);t&&d(t,h)}},159:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.lang=void 0,a.lang=(()=>{const e=document.querySelector(".bottom-lang a.active");if(e){const a=e.href.match(/:\/\/(\w+)\./);if(a)return a[1]}return"en"})()},379:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.updateOnClickHref=a.updateLinkHref=void 0;const t=document.location.href;a.updateLinkHref=function(e){const a=new URL(e.href,t),n=a.searchParams,r=new URL(t);r.pathname=a.pathname;const i=r.searchParams;i.delete("page"),i.delete("view");for(const[a,t]of n.entries())i.set(a,"tag"===a&&e.href.match(/&tag=\+/)?"+":t);if(e.classList.contains("active"))i.delete("view");else if(e.classList.contains("switcher")){const e=n.get("view");e&&i.delete(e)}e.href=r.href},a.updateOnClickHref=function(e,a){const n=e.getAttribute("onclick")?.match(/location.href='([^']+)';/);if(n){const r=new URL(n[1],t),i=r.searchParams,o=new URL(t);o.pathname=r.pathname;const s=o.searchParams;s.delete("page");for(const[e,a]of i.entries())s.set(e,a);if(document.getElementById("status-filter"))s.delete("status");else{const a=e.querySelector("a.switcher");if(a){s.delete("view");const e=new URL(a.href,t).searchParams.get("view");e&&s.delete(e)}}if(a&&a.length)for(const e of a)s.delete(e);e.setAttribute("onclick",`location.href='${o.href}';`)}}},136:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.ListForm=void 0;const n=t(759),r=t(213),i=t(26),o=t(52),s=t(131);class l extends r.AbstractForm{constructor(){super(...arguments),this.funcId="my-coin-func-block"}get mainId(){return`my-${this.formType}-block`}get formId(){return`${this.formType}-form`}get listId(){return`${this.formType}-block`}get headerId(){return`widget-${this.formType}-header`}get formCloseId(){return`${this.formType}-form-close`}get formUid(){return`u${this.formUidPrefix}id`}get formVariety(){return`${this.formType}-variety`}get buttonSetId(){return`${this.formType}-button-set`}get cancelButtonId(){return`btn-${this.formTypePrefix}cancel`}get addButtonId(){return`btn-${this.formTypePrefix}add`}get editButtonId(){return`btn-${this.formTypePrefix}edit`}get deleteButtonId(){return`btn-${this.formTypePrefix}del`}get formOnFunctionName(){return`Coin${this.formTypeMethod}FormOn`}get formOffFunctionName(){return`Coin${this.formTypeMethod}FormOff`}async handle(){this.main=document.getElementById(this.mainId),this.main&&(this.updateFormHandlers(),await this.update())}fillForm(e="",a="",t="",n=""){this.form&&(this.form[this.formUid]&&(this.form[this.formUid].value=e),this.form.condition&&(this.form.condition.value=a),this.form.price&&(this.form.price.value=t),this.form[this.formVariety]&&(n?this.form[this.formVariety].value=n:this.form[this.formVariety][0].checked=!0),this.form.action.value=e?`edit${this.formType}coin`:`add${this.formType}coin`)}formOnHandler(e,...a){this.formClickTimeout=setTimeout((()=>{this.listBlock&&(0,s.hide)(this.listBlock),this.form&&this.formClose&&(0,s.show)(this.form,this.formClose),this.func&&(0,s.disable)(this.func),this.widgetHeader?.removeEventListener("click",(e=>this.widgetHeaderRedirectHandler?.(e))),this.widgetHeader?.addEventListener("click",(e=>this.widgetHeaderCloseHandler(e))),this.fillForm(e,...a),this.cancelButton&&(0,s.show)(this.cancelButton),this.addButton&&(0,s.toggle)(!e,this.addButton),this.deleteButton&&(this.editButton&&(0,s.toggle)(!!e,this.editButton,this.deleteButton),this.deleteButton.href=`?action=del${this.formType}coin&${this.formUid}=${e}`),(e?this.editButton:this.addButton)?.focus()}),300)}formOnHandlerSubmit(e,...a){clearTimeout(this.formClickTimeout),this.fillForm(e,...a),this.form?.submit()}formOffHandler(){this.form&&this.formClose&&(0,s.hide)(this.form,this.formClose),this.listBlock&&(0,s.show)(this.listBlock),this.func&&(0,s.enable)(this.func),this.widgetHeader?.removeEventListener("click",(e=>this.widgetHeaderCloseHandler(e))),this.widgetHeader?.addEventListener("click",(e=>this.widgetHeaderRedirectHandler?.(e)))}widgetHeaderCloseHandler(e){(0,s.cancel)(e),this.formOffHandler()}updateList(){this.listBlock=document.getElementById(this.listId),this.listBlock&&(0,o.styleListLinks)(this.listBlock)}removeOneButton(){const e=this.main?.previousElementSibling;e?.matches("center.action-btn")&&e.remove()}updateFormHandlers(){const{unsafeWindow:e}=t.g;e[this.formOnFunctionName]=(...e)=>this.formOnHandler(...e),e[this.formOffFunctionName]=()=>this.formOffHandler()}async update(){this.main&&((0,s.show)(this.main),this.removeOneButton(),this.updateWidget(),this.updateForm()),this.updateList()}updateButtonSet(){const e=this.listBlock?.querySelector("center button.btn-s.btn-gray");if(!e)return;e.insertAdjacentHTML("afterend",`<div id="${this.buttonSetId}" class="btn-set"/>`),e.remove();const a=this.main?.querySelector((0,i.id)(this.buttonSetId));if(!a)return;const t=(e,t,n)=>{const r=`${this.formType}-marker-${n}`,o=`btn-marker marked-${t}`;a.insertAdjacentHTML("beforeend",`<div id="${r}" class="${o}">${e}</div>`);const s=a.querySelector((0,i.id)(r));s&&(s.addEventListener("click",(()=>this.formOnHandler("",`${n}`))),s.addEventListener("dblclick",(()=>this.formOnHandlerSubmit("",`${n}`))))};for(const[e,[a,n]]of this.buttonSetButtons)t(e,a,n)}updateCondition(){const e=this.form?.condition;e.insertAdjacentHTML("afterend",'<fieldset name="conditionFieldset"><legend class="gray-12" style="padding:5px;">Condition</legend></fieldset>');const a=this.form?.conditionFieldset;for(const t of e.options){const e=this.getConditionOption(t);if(e){const{text:t,value:n,checked:r,style:i}=e;a.insertAdjacentHTML("beforeend",`<label class="dgray-12" style="margin-top:0;${i}"><input name="condition" value="${n}" ${r} type="radio"/>${t}</label>`)}}e.remove()}updateFormButtons(){this.form&&(this.cancelButton=this.form.querySelector((0,i.id)(this.cancelButtonId)),this.addButton=this.form.querySelector((0,i.id)(this.addButtonId)),this.editButton=this.form.querySelector((0,i.id)(this.editButtonId)),this.deleteButton=this.form.querySelector((0,i.id)(this.deleteButtonId)),this.deleteButton?.classList.add("btn-red"))}updateWidget(){this.main&&(this.widgetHeader=this.main.querySelector((0,i.id)(this.headerId)),this.widgetHeader&&(this.widgetHeaderRedirectHandler=this.widgetHeader.onclick,this.widgetHeader.removeAttribute("onclick")))}async updateFragment(e){return this.main=(0,s.updateRequiredElement)(e,this.main),await this.update()}async updateForm(){if(this.main&&(this.func=this.main.querySelector((0,i.id)(this.funcId)),this.form=this.main.querySelector((0,i.id)(this.formId)),this.formClose=this.main.querySelector((0,i.id)(this.formCloseId)),this.form)){await(0,s.handleFormSubmit)(this.form,(async()=>await this.updateFragment(await(0,n.postFragment)(location.href,new FormData(this.form)))));for(const e of this.form.querySelectorAll("a[type=submit]"))await(0,s.handleLinkSubmit)(e,(async()=>await this.updateFragment(await(0,n.getFragment)(e.href))));this.updateFormButtons(),this.updateCondition(),this.updateButtonSet()}}}a.ListForm=l},48:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.getPriceByConditions=a.PricePropsByCondition=a.estimateWeightPrice=a.estimateSwapPrices=a.RX_YEAR=void 0;const n=t(290),r=t(188),i=/\([gг]/,o=/Country|Страна|Valstybė/,s=/Russia|Россия|Rusija|USSR|СССР|TSRS/,l=/Composition|Материал|Sudėtis/,c=/Silver|Серебро|Sidabras/,u=/Gold|Золото|Auksas/;a.RX_YEAR=/Year|Год|Metai/;function d(e,a){const t=n.ConditionValues[e]||0;return(n.ConditionValues[a]||0)-t}a.estimateSwapPrices=function(){const e=document.getElementById("swap");if(!e)return;const a=e.nextElementSibling;if(!a||!a.matches("#swap-block"))return;const t=new Map,n=new Map,i=a.querySelectorAll("a.list-link");for(const e of i){const a=e.querySelector(".right.blue-13");if(!a)continue;let r=a.textContent;const i=a.firstChild?.textContent;i&&(r=r?.replace(i,""));const o=a.lastChild?.textContent;o&&(r=r?.replace(o,""));const s=r?+r:0,l=e.querySelector(".left.dgray-11")?.textContent||"",c=t.get(l)||[];c.push(s),t.set(l,c);const u=e.querySelector(".left.gray-13")?.textContent||"",d=n.get(u)||new Map,h=d.get(l)||[];h.push(s),d.set(l,h),n.set(u,d)}function o(e){for(const a of[...e.keys()].sort(d)){const t=e.get(a)?.sort(r.cmp)||[];let{length:n}=t;1===n&&t.push(t[0])}}if(n.size>1)o(t);else for(const[,e]of n)o(e)},a.estimateWeightPrice=function(){const e=document.getElementById("coin");if(!e)return;const a=e.querySelector(".right.pricewj"),t=e.querySelector("h1"),n=e.querySelectorAll(".coin-info tr");let r,d,h=NaN,p=!1,m=!1,f=!1,_=1;for(const e of n){const a=e.querySelector("th"),t=a&&a.textContent||"",n=e.querySelector("td");if(n){const e=`${n.textContent}`;t.match(i)?h=+e:t.match(o)?p=!!e.match(s):t.match(l)&&(m=!!e.match(c),f=!!e.match(u),(m||f)&&(_=+(e.split(" ").pop()||0)))}}f?(r=h*(_||1)*50,d="au"):m?(r=h*(_||1)*.66,d="ag"):p?(r=.0075*h,d="ru"):(r=.0125*h,d="--");const g=`<br/><price class='right' title='${d}: ${r.toFixed(5)}'>€ ${r.toFixed(2)}</price>`;if(a)a.insertAdjacentHTML("beforeend",g);else{let a=!1;const n=[],r=e.querySelectorAll("#coin-list td.blue-13");for(const e of r){const t=e.cloneNode(!0);for(const e of t.childNodes)e.remove();const{textContent:r}=t;r?n.push(+r):a=!0}const i=Math.min(...n),o=Math.max(...n),s=[i.toFixed(2)];o>i?s.push(o.toFixed(2)):a&&s.unshift(""),t?.insertAdjacentHTML("beforebegin",`<a href='#price' class='gray-12 right pricewj'>Value:&nbsp;€ <span>${s.join(a?"~":"-")}</span>${g}</a>`)}},a.PricePropsByCondition=new Map([["UNC",[1.5,.5,.5]],["AU",[1.25,.25,.3]],["XF+",[1.1,.1,.2]],["XF",[1.05,.05,.15]],["VF+",[1.025,.025,.12]],["VF",[1,0,.1]],["F",[.99,-.05,.08]],["VG",[.98,-.1,.07]],["G",[.97,-.1,.06]]]);a.getPriceByConditions=function(e,t,n,r=0){if(e&&a.PricePropsByCondition.has(t)){const[i=1,o=0,s=0]=a.PricePropsByCondition.get(t)||[],l=+(n||0),c=1+(l&&!isNaN(l)?.001*((new Date).getUTCFullYear()-l):0),u=(e*(i+.001*r)+o+.01*r)*c,d=(s+.01*r)*c,h=Math.max(u,d);return console.debug("",{price:e,cond:t,year:n,plus:r,yplus:(new Date).getUTCFullYear()-l,ymul:c,mul:i,add:o,min:s,maxPrice:u.toFixed(2),minPrice:d.toFixed(2),final:h.toFixed(2)}),h.toFixed(2)}return""}},34:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleCountryRegions=void 0;const n=t(234),r=t(921),i=t(159),o=t(422),s=t(131);a.handleCountryRegions=async function(){const e=document.querySelector("ul.hor-switcher ~ ul.region-list");if(!e)return;const a=document.querySelector("ul.region-list ~ div.country-list");if(!a)return;const t=e?.querySelector('li.region[value="0"]')?.textContent,l=(0,o.getHashParam)("r"),c=Object.keys(r.regionTree);a.insertAdjacentHTML("beforebegin","<ul class='regions'></ul>"),function e(a,t){for(const[n,o]of Object.entries(t)){const t=(0,s.slug)(n),u=l&&t===l?" active":"",d=l&&t!==l&&c.includes(n)?" hide":"";a.insertAdjacentHTML("beforeend",`<li class='region${d}${u}' id='${t}'><h2>${r.regionNames[n]?.[i.lang]||n}</h2><ul class='regions'></ul><div class='country-list catalog-list'></div></li>`);const h=a.querySelector(`#${t} .regions`);h&&e(h,o)}}(a.previousElementSibling,r.regionTree);const u={},d={};for(a.querySelectorAll("div.cntry").forEach((e=>{const[,a]=e.querySelector("a")?.href.match(/&country=(\w+)/)||[],t=n.countryRegions[a];if(t){for(let n of(0,s.unique)(t)){const t=(0,s.slug)(n),r=document.querySelector(`.region#${t} > .country-list`);if(r&&!r.querySelector(`#${a}`)){const n=+(e.querySelector("span.right")?.textContent||0);u[t]=(u[t]||0)+n,d[t]=(d[t]||0)+1;const i=e.cloneNode(!0);i.id=a,r.append(i);for(let e,t=r.closest(".region")?.parentElement;e=t?.closest(".region");t=e.parentElement){const t=e.id;u[t]=(u[t]||0)>=n?u[t]-n:0,d[t]=(d[t]||0)>=1?d[t]-1:0,e.parentElement?.querySelector(`#${t} > .country-list > #${a}`)?.remove()}}}e.remove()}})),document.querySelectorAll(".regions .country-list:empty").forEach((e=>e.remove()));document.querySelectorAll(".regions .regions:empty").length;){for(const e of document.querySelectorAll(".regions .regions:empty"))e.remove();for(const e of document.querySelectorAll(".regions .region h2:only-child"))e.remove();for(const e of document.querySelectorAll(".regions .region:empty"))e.remove()}document.querySelectorAll(".regions .region").forEach((e=>d[e.id]&&u[e.id]&&e.querySelector("h2")?.insertAdjacentHTML("beforeend",`<span class='lgray-13'>( ${d[e.id]} / ${u[e.id]} )</span>`)));const h="active";e.innerHTML="",e.insertAdjacentHTML("beforeend",`<li class='region${l?"":" active"}'>${t}</li>`);for(const a of c){const t=(0,s.slug)(a);document.querySelector(`.region#${t}`)&&e.insertAdjacentHTML("beforeend",`<li class='region${l===t?" active":""}' data-id='${t}'>${r.regionNames[a]?.[i.lang]||a}</li>`)}e.addEventListener("click",(async({target:a})=>{if(!a)return;const t=a;e.querySelector("li.active")?.classList.remove(h),t.classList.add(h);const n=t.dataset.id;if(n){await(0,o.updateLocationHash)((e=>e.set("r",n)));const e=document.querySelectorAll(`.region-list ~ .regions > li.region:not(#${n})`);for(const a of e)a.classList.remove("active"),a.classList.add("hide");document.getElementById(n)?.classList.remove("hide"),document.getElementById(n)?.classList.add("active")}else await(0,o.updateLocationHash)((e=>e.delete("r"))),document.querySelectorAll(".region-list ~ .regions > li.region").forEach((e=>{e.classList.remove("active"),e.classList.remove("hide")}))}))}},26:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.id=void 0,a.id=function(e){return`#${e}`}},677:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.SwapFormList=void 0;const n=t(759),r=t(799),i=t(26),o=t(52),s=t(560),l=t(131),{debug:c}=console;a.SwapFormList=class{constructor(e){this.variants=new Map,this.expandAvailable=!1,this.combineAvailable=!1,this.deleteSwapCoin=async e=>{if(!s.UID)return null;e instanceof Set&&(e=[...e].join(","));const a=new URL("/swap-list/",location.href),t=a.searchParams;t.set("f","del"),t.set("usid",e),t.set("uid",s.UID);const r=await(0,n.getFragment)(a.href,null,!1);return r||(0,l.reload)()},this.updateLinkQty=(e,a)=>{if(e.hasAttribute("onClick")){const t=e.getAttribute("onClick")?.replace(o.CoinSwapFormOnMatcher,`CoinSwapFormOn('$<usid>', '$<cond>', '$<price>', '$<info>', '$<vid>', '${a}', '$<replica>'`);t&&e.setAttribute("onClick",t)}for(const a of e.querySelectorAll("span.left.dblue-13"))a.remove();if(a>1)for(const t of e.querySelectorAll("span.left.gray-13.wrap"))t.insertAdjacentHTML("afterend",`<span class='left dblue-13'><span>&times;</span>${a}</span>`)},this.listForm=e}update(e){this.listBlock?this.listBlock.replaceWith(e):this.listBlock=e,this.form=e.querySelector((0,i.id)(this.listForm.formId))||document.querySelector((0,i.id)(this.listForm.formId)),this.buttonSet=e.querySelector("center"),this.buttonSet&&(this.addButton("expand",0,"&laquo;*&raquo;",(e=>this.onExpand(e))),this.addButton("expand",5,"&laquo;5&raquo;",(e=>this.onExpand(e))),this.addButton("expand",10,"&laquo;10&raquo;",(e=>this.onExpand(e))),this.addButton("combine",0,"&raquo;&middot;&laquo;",(()=>this.onCombine())),this.updateButtons())}addButton(e,a,t,n){if(!this.buttonSet)return;const r=`${e}-qty`,o=this.buttonSet.querySelector((0,i.id)(r));o?(0,l.show)(o):(this.buttonSet.insertAdjacentHTML("beforeend",`<button id='${r}' type='button' class='btn--${e} btn-s btn-blue'>${t}</button>`),this.buttonSet.querySelector((0,i.id)(r))?.addEventListener("click",(async()=>{this.hideButtons(),await n(a),this.updateButtons()})))}updateVariants(){this.expandAvailable=!1,this.combineAvailable=!1,this.variants.clear();for(const{m:e}of(0,o.getSwapLinksWithMatches)()){const{uniq:a="",usid:t="",cond:n="",price:r="",info:i="",vid:o="",strqty:s=0}=e,l=+s;let c;l>1&&(this.expandAvailable=!0),this.variants.has(a)?(c=this.variants.get(a),c&&(c.usids.add(t),c.total+=l),this.combineAvailable=!0):c={usid:t,usids:new Set([t]),cond:n,price:r,info:i,vid:o,qty:l,total:l},c&&this.variants.set(a,c)}}showButtons(e){this.buttonSet&&(0,l.show)(...this.buttonSet.querySelectorAll("button"+(e?`.btn--${e}`:"")))}hideButtons(e){this.buttonSet&&(0,l.hide)(...this.buttonSet.querySelectorAll("button"+(e?`.btn--${e}`:"")))}showExpandButtons(){this.showButtons("expand")}showCombineButtons(){this.showButtons("combine")}hideExpandButtons(){this.hideButtons("expand")}hideCombineButtons(){this.hideButtons("combine")}updateButtons(){this.updateVariants(),this.expandAvailable?this.showExpandButtons():this.hideExpandButtons(),this.combineAvailable?this.showCombineButtons():this.hideCombineButtons()}async onExpand(e=0){c("EXPANDING...");let a=!1,t=!1,n=!0;for await(const{a:i,m:s}of(0,o.getSwapLinksWithMatches)()){const{uniq:l="",usid:u="",cond:d="",price:h="",info:p="",vid:m="",strqty:f=0}=s,_=+f,g=e>0?Math.min(_,e):_;if(g<=1)c(`IGNORING ${l} ${u}`);else{for(let e=g,s=_,f=Math.floor(s/e);e>1;e--,f=Math.floor(s/e)){s-=f,n||await(0,r.randomDelay)(),n=!1,c(`ADDING ${l} ${g-e+1} -> ${f}`);const _=await this.addSwapCoin({cond:d,qty:f,vid:m,info:p,price:h});if(!_){a=!0;break}const b=new Set;for(const e of(0,o.getSwapLinks)()){if(!e.hasAttribute("onClick"))continue;const a=e.getAttribute("onClick")?.match(o.CoinSwapFormOnMatcher);a&&a.groups&&b.add(a.groups.usid)}for(const e of(0,o.getSwapLinks)(_)){if(!e.hasAttribute("onClick"))continue;const a=e.getAttribute("onClick")?.match(o.CoinSwapFormOnMatcher),t=a&&a.groups&&a.groups.usid;t&&!b.has(t)&&(b.add(t),(0,o.styleSwapLink)(e),i.insertAdjacentElement("afterend",e),(0,o.addComment)(e))}n||await(0,r.randomDelay)(),n=!1,c(`UPDATING ${l} ${u} -> ${s}`);if(!await this.updateSwapCoin(u,{cond:d,qty:s,vid:m,info:p,price:h})){t=!0;break}this.updateLinkQty(i,s)}if(a||t)break}}c(a?"ADD FAILED :(":t?"UPDATE FAILED :(":"DONE!")}async onCombine(){c("COMBINING...");let e=!1,a=!1;for(const t of[...this.variants.values()]){const{usid:n,usids:r,qty:i=0,total:s}=t;if(c(`VARIANT usid=${n} usids=${[...r].join(",")} qty=${i} total=${s}`),s<=i)continue;const l=new Set(r);if(l.delete(n),!l.size)continue;c(`REMOVING ${[...l].join(", ")}`);const u=await this.deleteSwapCoin(l);if(!u){e=!0;break}{const e=u.getElementById(this.listForm.listId);if(e&&this.listBlock){const a=this.listBlock.querySelector("center");a&&e.querySelector("center")?.replaceWith(a),(0,o.styleListLinks)(e),this.update(e)}}c(`UPDATING ${n}`);const d=await this.updateSwapCoin(n,{...t,qty:s});if(!d){a=!0;break}{const e=d.getElementById(this.listForm.listId);if(c(this.listForm.listId,this.listBlock,e),e&&this.listBlock){const a=this.listBlock.querySelector("center");a&&e.querySelector("center")?.replaceWith(a),(0,o.styleListLinks)(e),this.update(e)}}}c(e?"REMOVE FAILED :(":a?"UPDATE FAILED :(":"DONE!")}async updateSwapCoin(e,{cond:a,qty:t,vid:r,info:i,price:o},s="editswapcoin"){if(!this.form)return null;const u=new FormData(this.form);u.set("usid",`${e||""}`),u.set("condition",`${a||""}`),u.set("qty",`${t||""}`),u.set("swap-variety",`${r||""}`),u.set("comment",`${i||""}`),u.set("price",`${o||""}`),u.set("action",`${s||""}`);const d=await(0,n.postFragment)(location.href,u);return c("fragment"),c(d),c("this.listForm.mainId"),c(this.listForm.mainId),c("fragment.getElementById(this.listForm.mainId)"),c(d.getElementById(this.listForm.mainId)),d.getElementById(this.listForm.mainId)?d:(0,l.reload)()}async addSwapCoin(e){return await this.updateSwapCoin("",e,"addswapcoin")}}},385:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.SwapForm=void 0;const n=t(290),r=t(136),i=t(48),o=t(26),s=t(677),l=t(52),c=t(377),{debug:u}=console;class d extends r.ListForm{constructor(){super(...arguments),this.formType="swap",this.formTypeMethod="Swap",this.formTypePrefix="",this.formUidPrefix="s",this.buttonSetButtons=new Map([["?",[6,0]],["G",[7,6]],["VG",[8,5]],["F",[9,4]],["VF",[10,3]],["XF",[11,2]],["UN",[12,1]],["PR",[3,7]],["CP",[5,100]]]),this.swapListManager=new s.SwapFormList(this)}fillForm(e="",a="",t="",n="",r="",i="",o=""){super.fillForm(e,a||o&&"100",t,r||(0,c.getCurrentVarietyId)());const{form:s}=this;s&&(s.comment.value=n,s.qty.value=i||"1",s.price.value&&s.price.value!=this.getDefaultPrice(r)||(s.price.value=this.getPriceByCondition(r),u(s.price.value)))}updateList(){if(this.listBlock=document.getElementById(this.listId),this.listBlock){this.swapListManager.update(this.listBlock.cloneNode(!0));for(const e of document.querySelectorAll((0,o.id)(this.listId)))(0,l.styleListLinks)(e);(0,l.addLinkComments)()}}getConditionOption(e){const{value:a,textContent:t}=e;return{value:a,text:a&&t?t:"Without condition",checked:"3"===a?"checked":"",style:e.getAttribute("style")||""}}async updateForm(){await super.updateForm(),this.updateQty(),this.updatePrice()}updateQty(){const{form:e}=this;if(!e)return;const{qty:a}=e;if(!a)return;a.inputmode="numeric",a.addEventListener("focus",(()=>{a.setSelectionRange(0,a.value.length)}));const t=(t,n,r,i)=>{a.insertAdjacentHTML(t,`<button name='${n}' type='button' class='btn-s btn-gray btn-ctrl'>${r}</button>`),e[n].addEventListener("click",(()=>{a.value=`${i(+a.value)}`}))};t("beforebegin","plus10","+10",(e=>e+10)),t("beforebegin","plus5","+5",(e=>e+5)),t("beforebegin","plus","+",(e=>e+1)),t("beforebegin","minus","&minus;",(e=>e-1))}updatePrice(){const{form:e}=this;if(!e)return;const{price:a}=e;a&&(a.inputmode="numeric",a.addEventListener("focus",(()=>{a.setSelectionRange(0,a.value.length)})),a.insertAdjacentHTML("afterend","<button name='resetprice' type='button' class='btn-s btn-gray btn-ctrl btn-ctrl-price'>⟲</button>"),e.resetprice.addEventListener("click",(()=>{e.price.value=this.getPriceByCondition(this.formVariety&&e[this.formVariety]?.value||""),u(e.price.value)})))}getDefaultPrice(e=""){const{form:a}=this;return+(e&&document.querySelector(`#coin table.tbl tr td a[href$="&vid=${e}#price"]`)?.childNodes?.[1]?.textContent||a?.price.placeholder)}getPriceByCondition(e=""){const{form:a}=this;if(!a)return;const t=a.comment.value.toLowerCase();if(t.includes("."))return a.price.value;let r=n.FormValueCondition[+a.condition.value]||"";t.startsWith("au")?r="AU":t.startsWith("xf+")?r="XF+":t.startsWith("vf+")&&(r="VF+");let o=[...t].filter((e=>"+"===e)).length;o&&o--;const s=document.querySelector("#swap-block span.gray-13")?.childNodes?.[0]?.textContent;return(0,i.getPriceByConditions)(this.getDefaultPrice(e),r,s,o)}}a.SwapForm=d},52:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.addLinkComments=a.addComment=a.styleListLinks=a.styleSwapLink=a.getSwapLinksWithMatches=a.getSwapLinks=a.CoinSwapFormOnMatcher=void 0;const n=t(290);function*r(e=document){const a=e.getElementById("swap-block");if(a){const e=a.querySelectorAll("a.list-link");for(const a of e)yield a}}function i(e){const a=e.querySelector(".left.dgray-11");if(a){const e=a.textContent?.trim();a.classList.add(`marked-${n.ConditionColors[e]}`)}const t=e.querySelector(".left.gray-13");if(!t)return;const r=t.textContent?.split(" "),i=r?.shift();r?.length&&(t.textContent=i||"",t.insertAdjacentHTML("beforeend",` <span class="lgray-11">${r.join(" ")}</span>`))}function o(e){if(e.hasAttribute("onClick")){const t=e.getAttribute("onClick")?.match(a.CoinSwapFormOnMatcher);if(t?.groups){const{info:a}=t.groups;a&&!e.querySelector(".comments")&&e.insertAdjacentHTML("beforeend",`<span class="right dgray-11 wrap comments" title="${a}"><div class="ico-16"></div> ${a}</span>`)}}}a.CoinSwapFormOnMatcher=/CoinSwapFormOn\('(?<usid>[^']*)', '(?<cond>[^']*)', '(?<price>[^']*)', '(?<info>[^']*)', '(?<vid>[^']*)', '(?<strqty>[^']*)', '(?<replica>[^']*)'/,a.getSwapLinks=r,a.getSwapLinksWithMatches=function*(){for(const e of r())if(!e.querySelector("div.ico-16")&&e.hasAttribute("onClick")){const t=e.getAttribute("onClick")?.match(a.CoinSwapFormOnMatcher);if(t&&t.groups){const{cond:a,info:n,vid:r}=t.groups;yield{a:e,m:{...t.groups,uniq:`${a} ${r} ${n}`}}}}},a.styleSwapLink=i,a.styleListLinks=function(e){const a=e.querySelectorAll("a.list-link");for(const e of a)i(e)},a.addComment=o,a.addLinkComments=function(){for(const e of r())o(e)}},188:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.addFilteringOptions=a.addSortingOptions=a.cmp=void 0;const n=t(290),r=t(526),i=t(422),o=t(131);function s(e){return e?+e.replace(/[^.\d]/g,""):0}function l(e,a){return-(e<a)||+(e>a)}function c(e,a,t){const n=`sort${(0,o.tt)(t)}`;return l(s(e[n]),s(a[n]))}function u(e,a,t){const n=`sort${(0,o.tt)(t)}`;return l(e[n],a[n])}function d(e,a,t=1){return t*c(e,a,"year")||t*u(e,a,"mm")}function h(e,a,t=1){return t*u(e,a,"kmc")||t*c(e,a,"km")||t*u(e,a,"kma")||t*d(e,a)}function p(e,a,t=1){return t*u(e,a,"face")||t*h(e,a,-1)}function m(e,a,t=1){return t*c(e,a,"cond")||p(e,a)}a.cmp=l;const f=new Map([["Year",{index:0,field:"year",sort:d}],["Facial value",{index:1,field:"face",sort:p}],["Condition",{index:3,field:"cond",sort:m}],["Value",{index:4,field:"value",sort:function(e,a,t=1){return t*c(e,a,"value")||m(e,a,-1)}}],["Krause number",{index:6,field:"km",sort:h}]]),_=["Year","Facial value","Condition","Value","Krause number"];let g="Year",b="d";function A(e="a"){return`<div class='right'><span class='arrow ${"a"===e?"at":"ab"}'></span></div>`}function y(e="d"){return A(e)}function w(e){return`<div class='left gray-13'>${e}</div>`}function E(e){if(!e)return"";const a=document.createElement("template");a.innerHTML=e;return a.content.querySelector("div.left")?.classList.add("wrap"),a.innerHTML}function S(e,a,t){const n="a"===t?1:-1,r=f.get(a);if(!r)return;const{sort:i}=r;for(const a of e){const e=[...a.querySelectorAll("tr")];e.length>1&&(e.sort((({dataset:e},{dataset:a})=>i(e,a,n))),a.append(...e))}}a.addSortingOptions=function(){const e=document.getElementById("take-swap-list");if(!e)return;const a=e.querySelector("div.left.action-board");if(!a)return;const t=e.querySelectorAll("table.swap-coin tbody");if(!t||!t.length)return;const r=e.querySelectorAll("table.swap-coin tbody tr");for(const e of r){const a=e.querySelectorAll("td.ico-star").length,t=e.querySelectorAll("td"),r=e.dataset;for(const[e,{index:i,field:s}]of f){const l=`sort${(0,o.tt)(s)}`,c=t[i+a].textContent;if("Year"===e){const[e,...a]=c.split(/(?:\s|&nbsp;)+/);r[l]=e,r.sortMm=a.join(" ")}else if("Condition"===e)r[l]=`${n.ConditionValues[c]}`;else if("Krause number"===e){const e=c.match(/(?<cat>\w+)#\s*(?<prefix>[a-zA-Z]*)(?<num>\d+)(?<suffix>(?:\.\d+)?[a-zA-Z]*)/i);if(e&&e.groups){const{groups:{cat:a,num:t,prefix:n,suffix:i}}=e;r.sortKmc=a,r[l]=t,r.sortKma=`${n}${i}`,r.sortKmz=c}else r.sortKmc="",r[l]=c,r.sortKma="",r.sortKmz=c}else r[l]=c}}var s,l,c;!function(){const e=(0,i.getHashParam)("o"),[a="year",t="d"]=e?.split("_")||[];b=t;for(const[e,{field:t}]of f.entries())t===a&&(g=e)}(),S(t,g,b),a.removeAttribute("style"),a.insertAdjacentHTML("afterend",(s="sort-filter",l=`${w(g)}${A(b)}`,c=_.map((e=>`\n            <a class='list-link' data-option='${e}' data-order='a'>${w(e)}${A()}</a>\n            <a class='list-link' data-option='${e}' data-order='d'>${w(e)}${y()}</a>\n        `)),`\n    <div class='right filter-container'>\n        <div class='filter-box' id='${s}'>\n            ${E(l)}\n        </div>\n        <div class='drop hide filter-dialog' id='${s}-dialog'>\n            ${c.join("")}\n        </div>\n    </div>\n`));const u=e.querySelector("#sort-filter"),d=e.querySelector("#sort-filter-dialog");u&&d&&(u.addEventListener("click",(e=>{e.stopPropagation(),d.style.display="block"})),d.addEventListener("click",(async e=>{e.stopPropagation(),d.style.display="none";const a=e.target.closest("a");if(!a)return;u.innerHTML=E(a.innerHTML);const{option:n,order:r}=a.dataset;g=n,b=r,await async function(e,a){await(0,i.updateLocationHash)((t=>{const n=f.get(e);n&&t.set("o",`${n.field}_${a}`)}))}(g,b),S(t,g,b)})))},a.addFilteringOptions=function(){const e=document.getElementById("take-swap-list");if(!e)return;const a=e.lastElementChild;if(!a)return;function t(e,a){return[...e.keys()].sort(a).reduce(((a,t)=>{const n=e.get(t);return n&&a.set(t,n),a}),new Map)}const n=new Map,c=e.querySelectorAll("h2");n.set(r.Filter.COUNTRY,{placeholder:"Country",width:250,options:t([...c].reduce(((e,a)=>{const t=a.cloneNode(!0);for(const e of t.querySelectorAll("input, sup"))e.remove();return e.set(t.id,t.innerHTML),e}),new Map))}),n.set(r.Filter.YEAR,{placeholder:"Year",width:90,options:t([...e.querySelectorAll("tr[data-sort-year]")].reduce(((e,a)=>{const t=a.dataset.sortYear;return t&&e.set(t,t),e}),new Map),((e,a)=>l(s(a),s(e))))}),n.set(r.Filter.VALUE,{placeholder:"Face value",width:110,options:t([...e.querySelectorAll("tr[data-sort-face]")].reduce(((e,a)=>{const t=a.dataset.sortFace;if(t){const[a]=t.split(" ");e.set(a,a)}return e}),new Map),((e,a)=>l(s(e),s(a))))});const u=/([a-z]*)([0-9]*)((?:\.[0-9]+)?[a-z]*)/i;n.set(r.Filter.KM,{placeholder:"KM#",width:110,options:t([...e.querySelectorAll("tr[data-sort-km]")].reduce(((e,a)=>{const{sortKmc:t="",sortKm:n="",sortKma:r=""}=a.dataset,i=`${t.toLowerCase()}${n}${r}`;return i&&e.set(i,`${t}# ${n}${r}`),e}),new Map),((e,a)=>{const[,t,n,r]=e.match(u)||[],[,i,o,c]=a.match(u)||[];return l(t,i)||l(s(n),s(o))||l(r,c)}))});const d=Object.values(r.Filter),h=new Map;for(const e of d){const a=(0,i.getHashParam)(e);if(a){h.set(e,a);const t=n.get(e);t&&(t.value=a)}}function p(){for(const e of c){const a=e.nextElementSibling,t=a.querySelectorAll("tr");let n=!1;e:for(const a of t){const t=a.dataset;for(const[i,o]of h)switch(i){case r.Filter.COUNTRY:if(e.id!==o){n=!1;break e}break;case r.Filter.YEAR:if(t.sortYear!==o){a.style.display="none";continue e}break;case r.Filter.VALUE:if(!t.sortFace?.startsWith(`${o} `)){a.style.display="none";continue e}break;case r.Filter.KM:const[,i,s,l]=o.match(u)||[];if(t.sortKmc?.toLowerCase()!==i||t.sortKm!==s||t.sortKma!==l){a.style.display="none";continue e}}a.style.display="",n=!0}e.style.display=a.style.display=n?"":"none"}}a.insertAdjacentHTML("beforebegin",(0,r.renderFilters)(n)),p();for(const e of document.querySelectorAll("[data-filter-by]"))e.addEventListener("click",(async()=>{const a=e.dataset,t=a.filterBy,n=a.filterValue;await(0,i.updateLocationHash)((e=>n?e.set(t,n):e.delete(t)));const r=document.querySelector(`[data-filter="${t}"]`);var o;r&&(n?(r.innerHTML=`${E(e.innerHTML)}${o=t,`<div class='right close' title='Clear filter' data-filter-clear='${o}'>×</div>`}`,r.classList.add("filter-box-active")):(r.innerHTML=`${E(r.dataset?.filterPlaceholder)}${y()}`,r.classList.remove("filter-box-active"))),n?h.set(t,n):h.delete(t),p()}));document.querySelectorAll("[data-filter]").forEach((e=>e.addEventListener("click",(async a=>{(0,o.cancel)(a);const t=e.dataset;if(null!=t.filterDisabled)return;let n=!1;const r=a.target,s=t.filter;if(r.matches("[data-filter-clear]")){n=!0;const{filterClear:a}=r.dataset;a&&await(0,i.updateLocationHash)((e=>e.delete(a))),e.innerHTML=`${E(t.filterPlaceholder)}${y()}`,e.classList.remove("filter-box-active"),h.delete(s),p()}for(const e of document.querySelectorAll("[data-filter-dialog]"))e.style.display=n||e.dataset.filterDialog!==s||"block"===e.style.display?"none":"block"})))),document.querySelectorAll("[data-filter-dialog]").forEach((e=>e.addEventListener("click",(a=>{(0,o.cancel)(a),e.style.display="none"}))));const m=e.querySelectorAll(".filter");for(const a of m)a.addEventListener("input",(a=>{const t=a.target,n=t.id,r=t.value,i=`sort${(0,o.tt)(n)}`,s=e.querySelectorAll("tbody > tr");for(const e of s){const a=e.dataset;e.style.display=!r||a[i]?.includes(r)?"":"none"}}));const f=e.querySelectorAll("table.swap-coin tbody");f&&f.length}},65:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.addPriceUpdateButton=a.removeRowHrefFromSwapList=a.ignoreUnwanted=a.checkSold=a.addConflictHandling=a.showAllPrices=a.duplicatePagination=a.addOpenedTabsHandler=a.calcTotalPrices=a.addTrackingLinks=a.markSeparateCountries=a.addThumbnails=a.addSwapTitle=void 0;const n=t(234),r=t(921),i=t(759),o=t(290),s=t(799),l=t(48),c=t(560),u=t(422),d=t(131);a.addSwapTitle=function(){const e=[...document.querySelectorAll("#swap-mgr div.leftCol > div.user-info > .wrap")].map((e=>e.textContent)).join(" / ");e&&(document.title=`${e} - ${document.title}`)},a.addThumbnails=function(){for(const e of document.querySelectorAll("table.swap-coin tr")){const{tooltipImgpath:a,tooltipSample:t,tooltipCode:n}=e.dataset;e.querySelector("td")?.insertAdjacentHTML(e.querySelector("div.reserve")||"swap-list"===document.body.id?"beforebegin":"afterend",`\n            <th style='width: 100px' class='thumbnails'>\n                ${a&&t&&n?`\n                    <img src='${a}/${t}-1c/${n}.jpg' class='thumbnail' loading='lazy' alt='obverse'/>\n                    <img src='${a}/${t}-2c/${n}.jpg' class='thumbnail' loading='lazy' alt='reverse'/>\n                `:""}\n            </th>\n        `)}};const h=["australia","belgium","croatia","denmark","finland","france","german_democratic_republic","german_empire","germany","iceland","india","british_india","italy","lithuania","netherlands","norway","poland","portugal","russia","spain","sweden","third_reich","united_kingdom","usa","ussr"];function p(e,a){return"lithuania"===e?a<=450?1.5:a<=900?2:a<=1900?2.5:5:n.countryRegions[e].includes(r.Europe)?a<=450?4.5:a<=900?7.5:a<=1900?10:a<=2900?20:a<=5500?25:a<=8500?30:50:a<=450?5.5:a<=900?10:a<=1900?15:a<=2900?40:a<=3800?50:a<=4700?60:a<=5500?70:a<=6500?80:a<=7500?90:a<=8500?100:150}function m(e,a){let t=3.4;return n.countryRegions[e].includes(r.PayPal_UK)?t+=1.29:n.countryRegions[e].includes(r.PayPal_Europe)||(t+=1.99),[a*(1+t/100)+.35,`${a.toFixed(2)} + ${t.toFixed(2)}% + ${.35.toFixed(2)}`]}a.markSeparateCountries=function(){for(const e of document.querySelectorAll("#swap-list, #take-swap-list")){for(const a of e.querySelectorAll("h2"))h.includes(a.id)&&a.classList.add("separate-country");for(const a of e.querySelectorAll("table.swap-coin td a.dgray-13"))a.textContent?.includes("euro")&&a.classList.add("separate-country")}},a.addTrackingLinks=function(){const e=document.getElementById("swap-mgr");if(e){const a=e.querySelectorAll("div.left.lgray-11");for(const e of a){if(!e.textContent?.includes("Track"))continue;const a=e.nextElementSibling,t=a?.textContent;t&&(a.innerHTML=`<a href='https://www.17track.net/en/track?nums=${t}' target='_blank'>${t}</a>`)}}},a.calcTotalPrices=function(){const e=document.querySelector("#swap-mgr #tree");if(e){const a=e.querySelectorAll(".region.list-link + .region .right, .region.list-link + .swap-reserve + .region .right"),t=document.querySelectorAll(".swap-list");for(const[r,i]of a.entries()){const a=i.querySelector("span:not(.lgray-11)");if(!a)continue;const o=t[r].querySelectorAll("tr:not(.del) .td-price");let s=0;for(const e of o){let a=e.querySelector(".gray-11.price-tooltip");if(a||(a=e.querySelector(".blue-13")),!a)continue;let t=a.textContent;const n=a.parentElement.querySelectorAll(".gray-11");for(const e of n)e!==a&&(t=t.replace(e.textContent,""));s+=+t}a.classList.add("blue-13");const l=+(a.textContent||0),c=l-s;if(a.parentElement?.insertAdjacentHTML("beforeend",`\n                <span class='lgray-11 price-tooltip'>\n                    ${a.previousElementSibling?.textContent}\n                    ${s.toFixed(2)}\n                    ${a.nextElementSibling?.textContent}\n                </span>\n                ${c?`\n                        <span class='lgray-11 price-tooltip ${(r?c<0:c>0)?"price-over":"price-under"}'>\n                            ${c>0?"+":"&minus;"}\n                            ${a.previousElementSibling?.textContent}\n                            ${Math.abs(c).toFixed(2)}\n                            ${a.nextElementSibling?.textContent}\n                        </span>\n                        `:""}\n                `),a.parentElement?.parentElement?.classList.add(c?"price-triple":"price-double"),r){const t=a.closest("a.region")?.nextElementSibling,r=+(t?.querySelector(".right")?.textContent||0),i=(0,n.getCountryId)(e.previousElementSibling?.querySelector(".gray-11")?.textContent||""),o=p(i,r),s=l+o,[c,u]=m(i,s);t?.insertAdjacentHTML("afterend",`\n                    <a class='region price-line'>\n                        <div class='left lgray-11'>Shipping</div>\n                        <div class='right gray-11'>€ ${o.toFixed(2)}</div>\n                    </a>\n                    <a class='region price-line'>\n                        <div class='left lgray-11'>Total</div>\n                        <div class='right gray-11'>€ ${s.toFixed(2)}</div>\n                    </a>\n                    <a class='region price-line price-double'>\n                        <div class='left lgray-11'>PayPal</div>\n                        <div class='right gray-11'>€ ${c.toFixed(2)}</div>\n                        <div class='right lgray-11'>${u}</div>\n                    </a>\n                    `)}}}};const f="take",_="need";async function g(e){await(0,u.updateLocationHash)((a=>a.set("t",e)))}a.addOpenedTabsHandler=function(){const[e,a]=document.querySelectorAll("#swap-mgr div.widerightCol > ul.region-list > li.region"),[,t]=document.querySelector('#tree .user-info + div span[class^="swap-status"]')?.className.match(/swap-status(\d+)/)||[];console.info({status:t});let n=(0,u.getHashParam)("t")||(t>"2"?_:f);e&&(e.addEventListener("click",(()=>g(_))),n===_&&e.click()),a&&(a.addEventListener("click",(()=>g(f))),n===f&&a.click())},a.duplicatePagination=function(){const e=document.getElementById("swap-list");if(!e)return;const a=e.querySelectorAll("div.pages");if(a.length>1)return;const t=a.item(a.length-1);if(!t.children.length)return;const n=e.querySelector("table.swap-coin");if(!n)return;const r=n.previousElementSibling;if(!r||!r.matches("h2"))return;const i=t.parentElement;if(!i)return;const o=i.cloneNode(!0);o.style.height="30px",r.insertAdjacentElement("beforebegin",o)};const b="price-invalid";function A(e,a){const t=e.querySelector(".td-cond");if(!t)return;const n=t.nextElementSibling;if(!n)return;n.classList.add("td-price");let r=t.querySelector("span.txt")?.textContent||t.textContent;const i=n.querySelector("span.blue-13");if(!i)return;a&&(i.textContent=a);const o=+(i?.textContent||0),s=n.querySelector("span.gray-11:first-child")?.textContent,u=n.querySelector("span.gray-11:last-child")?.textContent;let d=e.dataset?.tooltipPrice;if(!d)return;for(const e of n.querySelectorAll("span[data-price-percent], span[data-price-tooltip], span[data-price-cond]"))e.remove();s&&(d=d.replace(s,"")),u&&(d=d.replace(u,""));const h=+d;if(i.style.color=h>o?"green":h<o?"brown":"",i.classList.remove("price-times"),!isNaN(h)&&o!==h){const e=o/h;let a;if(e>=2)a=`<span class='gray-11 price-times' data-price-percent>&times;${e.toFixed(e>=10?0:1).replace(".0","")}</span>`,i.classList.add("price-times");else{const t=100*(e-1);a=t>=50?`<span class='gray-11 price-times' data-price-percent>+${t.toFixed()}%</span>`:t>=0?`<span class='gray-11 price-over' data-price-percent>+${t.toFixed()}%</span>`:`<span class='gray-11 price-under' data-price-percent>&minus;${Math.abs(t).toFixed()}%</span>`}n.insertAdjacentHTML("beforeend",`${a}<span class='gray-11 price-tooltip' data-price-tooltip>${s}${h.toFixed(2)}${u}</span>`)}if(location.href.includes(`?uid=${c.UID}`)&&!e.querySelector('th a[title*="."]')){let a=0;const t="UNC"===r?"AU":r,i=e.querySelector(`th a[title^="${t}"]`)?.title;"UNC"===r?i?.startsWith("AU")&&(r="AU"):i&&(a=[...i].filter((e=>"+"===e)).length,"XF"===r?(r="XF+",a--):"VF"===r&&(r="VF+",a--));const c=e.querySelector("td")?.childNodes?.[0]?.textContent,d=(0,l.getPriceByConditions)(h,r,c,a);o&&d&&o!==+d&&(e.classList.add(b),e.dataset.condPrice=d,n.insertAdjacentHTML("beforeend",`<span class='gray-11 price-cond' data-price-cond>${s}${d}${u}</span>`))}}function y(){const e=!!document.getElementById("need-swap-list"),a=document.querySelectorAll("#swap-list table.swap-coin");for(const t of a){let a=[...t.querySelectorAll("tr")];const n=a.filter((e=>!!e.querySelector("input.swap-checkbox:checked")||(e.classList.remove("conflict"),!1))),r=t.previousElementSibling;if("h2"===r.tagName.toLowerCase()){const e=r.querySelector("input.swap-country-checkbox, input.edit-country-checkbox");e&&(e.checked=n.length===a.length)}e||(a=n);for(const n of a){const a=n.dataset,{tooltipName:r,tooltipSubject:i,tooltipVariety:o,tooltipKm:s}={...a};let l="";s?l=`${l}[data-tooltip-km=${JSON.stringify(s)}]`:(l=`${l}tr[data-tooltip-name=${JSON.stringify(r)}]`,i&&(l=`${l}[data-tooltip-subject=${JSON.stringify(i)}]`)),o&&(l=`${l}[data-tooltip-variety=${JSON.stringify(o)}]`);let c=[...t.querySelectorAll(l)];e||(c=c.filter((e=>!!e.querySelector("input.swap-checkbox:checked"))));const u=c.length>1;for(const e of c)e.classList.toggle("conflict",u)}}}a.showAllPrices=function(){const e=document.querySelectorAll("table.swap-coin tr");for(const a of e)A(a)},a.addConflictHandling=function(){y();const e=document.querySelectorAll("#swap-list table.swap-coin input.swap-checkbox");for(const a of e)a.addEventListener("click",(e=>{const a=e.target;if(!a.checked){const e=a.closest("tr");e&&e.classList.remove("conflict")}y()}));const a=document.querySelectorAll("#swap-list h2 input.swap-country-checkbox");for(const e of a)e.addEventListener("click",(e=>{const a=e.target;if(!a.checked){const e=a.closest("h2");if(e){const a=e.nextElementSibling?.querySelectorAll("tr");if(a)for(const e of a)e.classList.remove("conflict")}}y()}))},a.checkSold=function(){const e=document.getElementById("need-swap-list");if(!e)return;const a=e.querySelectorAll("table.swap-coin tr.del");let t=a.length;if(!t)return;const n="act-d-all",r=e.querySelector(".action-board");if(!r)return;r.insertAdjacentHTML("beforeend","<a class='btn-s btn-gray ico-del' id='act-d-all' style='float: right;'><div class='ico-16'></div></a>");const o=document.getElementById(n);o&&o.addEventListener("click",(async()=>{if(!confirm("Are you sure you want to delete these coins?"))return!1;let e=!0;for await(const n of a){e||await(0,s.randomDelay)(),e=!1;const a=n.querySelector("a.act");a&&await(0,i.get)(a.href);const r=document.getElementById("tree")?.querySelector("a.region.list-link div.right.blue-13 sup");r&&(--t?r.textContent=`&nbsp;-${t}`:r.remove()),n.remove()}o.remove()}))},a.ignoreUnwanted=function(){if(!document.getElementById("need-swap-list")){const e=document.querySelectorAll("table.swap-coin");for(const a of e){const e=a.querySelectorAll("tr");for(const a of e){const e=a.querySelector('td span[class^="marked-"]'),t=e&&e.classList.item(0),n=t&&o.ColorValues[+(t.split("marked-").pop()||0)]||0,r=a.querySelector("td.td-cond"),i=r&&o.ConditionValues[r.textContent]||0;n&&(!i||i<=n)&&a.classList.add("ignore")}}}},a.removeRowHrefFromSwapList=function(){const e=document.getElementById("swap-mgr");if(!e)return;const a=e.querySelectorAll("table.offer-list tr[data-href]");for(const e of a)e.removeAttribute("data-href")},a.addPriceUpdateButton=async function(){let e;const a=document.getElementById("swap-list");if(!a)return;const t=a.querySelector("a.ico-ref");if(!t)return;if(t.href="#",t.classList.remove("ico-ref"),t.addEventListener("click",(e=>{(0,d.cancel)(e),i()})),r(),e=t.parentElement.querySelector("#continue"),e)return;const n=location.hash?.includes("update-prices");function r(){const e=t?.querySelector("div.ico-16");if(e){const t=!!a.querySelectorAll("table.swap-coin tr[data-cond-price]")?.length;e.classList.toggle("ico-16-swap1",t),e.classList.toggle("ico-16-check1",!t)}}async function i(){const n=a.querySelectorAll("table.swap-coin tr");let i=!0;for(const e of n){const a=e.dataset.condPrice;if(a){const t=e.id.substr(4),n=e.querySelector(`#cond-${t}`)?.value||"",r=e.querySelector(`#qty-${t}`)?.value||"",o=new URL("/swap-list/",location.href);o.searchParams.set("single-edit","1"),o.searchParams.set("usid",t),o.searchParams.set("cond",n),o.searchParams.set("price",a),o.searchParams.set("qty",r),console.debug("UPDATE",o.href),(0,d.scrollIntoView)(e),i?i=!1:await(0,s.randomDelay)(2e3,3e3);try{const e=await fetch(o.href);if(!e.ok)return console.error(`Response was not OK:\n${JSON.stringify(e,null,4)}`),await(0,s.randomDelay)(2e3,3e3),void location.reload()}catch(e){return console.error(e),await(0,s.randomDelay)(2e3,3e3),void location.reload()}delete e.dataset.condPrice,e.classList.remove(b),A(e,a)}}if(r(),!e?.checked)return void(0,d.scrollIntoView)(t);const o=a.querySelector("#swap-list div.pages a.current");if(o){const e=+(o.textContent||0)+1,t=a.querySelector(`#swap-list div.pages a[href$="&page=${e}"]`);if(t)return t.href=`${t.href}#update-prices`,await(0,s.randomDelay)(5e3,5e3),void t.click();const n=a.querySelector("#swap-list div.pages a:first-child");if(n&&!n?.classList.contains("current"))return await(0,s.randomDelay)(5e3,5e3),void n.click()}}t.insertAdjacentHTML("afterend",`\n        <label class='btn-s'>\n            <input type='checkbox' id='continue' ${n?"checked='checked'":""} />\n            Continue update on next page\n        </label>\n        `),e=t.parentElement.querySelector("#continue"),n&&(await(0,s.randomDelay)(2e3,3e3),await i())}},560:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.UID=void 0,a.UID=(()=>{const e=document.querySelector('.header .partition .menu-l a[href^="/uid"]');if(e){const a=e.href.match(/\/uid(\d+)/);if(a)return a[1]}return null})()},422:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.getAllHashParams=a.getHashParam=a.hasHashParam=a.setHashParam=a.deleteHashParam=a.updateHashHref=a.updateLocationHash=a.hashSearchParams=a.getUrl=a.setHash=a.loc=void 0;const{location:t}=document;function n(){return new URL(t.href)}function r(e){return"string"==typeof e?new URL(e):e}function i(e=n()){return new URLSearchParams(r(e).hash.substr(1))}async function o(e,a=n()){if("function"!=typeof e)return e.toString();const t=i(a),r=await e(t);return(null!=r?r:t).toString()}async function s(e,a=n()){const t=r(a),i=await o(e,t);return(t.hash||i)&&(t.hash=`#${i}`),t.href}a.loc=n,a.setHash=function(e){const a=e.toString();(t.hash||a)&&history.replaceState({},"",new URL(`#${a}`,t.href))},a.getUrl=r,a.hashSearchParams=i,a.updateLocationHash=async function(e,a=n()){const r=await o(e,a);(t.hash||r)&&history.replaceState({},"",new URL(`#${r}`,a))},a.updateHashHref=s,a.deleteHashParam=async function(e){return await s((a=>(a.delete(e),a)))},a.setHashParam=function(e,a){return s((t=>(t.set(e,a),t)))},a.hasHashParam=function(e){return i().has(e)},a.getHashParam=function(e){return i().get(e)},a.getAllHashParams=function(e){return i().getAll(e)}},131:(e,a)=>{"use strict";function t(e){e&&(e.preventDefault(),e.stopPropagation())}function n(){return location.reload(),null}function r(e,a){if(a){const t=e.getElementById(a.id);if(!t)return n();a.replaceWith(t),(a=t).querySelectorAll("[data-href]").forEach((e=>{e.addEventListener("click",(a=>{a.preventDefault(),a.stopPropagation();const t=document.createElement("a");t.href=e.dataset.href,t.dispatchEvent(new MouseEvent(a.type,a))}))}))}return a}function i(e,a){if(a){const t=e.getElementById(a.id);t?(a.replaceWith(t),a=t):(a.remove(),a=null)}return a}Object.defineProperty(a,"__esModule",{value:!0}),a.scrollIntoView=a.slug=a.unique=a.todayMonth=a.handleLinkSubmit=a.handleFormSubmit=a.updateParts=a.updateOptionalElement=a.updateRequiredElement=a.reload=a.cancel=a.disable=a.enable=a.toggle=a.hide=a.show=a.tt=a.sp=void 0,a.sp=function(e){return`${e||""}`.replace(/\u{00A0}+/gu," ").replace(/\s+/g," ").trim()},a.tt=function(e){return`${(e=`${e||""}`).charAt(0).toUpperCase()}${e.substr(1)}`},a.show=function(...e){for(const a of e)a?.classList.remove("hide")},a.hide=function(...e){for(const a of e)a?.classList.add("hide")},a.toggle=function(e,...a){for(const t of a)t?.classList.toggle("hide",!e)},a.enable=function(...e){for(const a of e)a?.classList.remove("disable")},a.disable=function(...e){for(const a of e)a?.classList.add("disable")},a.cancel=t,a.reload=n,a.updateRequiredElement=r,a.updateOptionalElement=i,a.updateParts=async function(e,a,t,n){return t.map((a=>r(e,a))),n&&n.map((a=>i(e,a))),await a()},a.handleFormSubmit=async function(e,a){var n;e.addEventListener("submit",(n=e.onsubmit,async e=>{t(e);const r=e.target;n&&!1===n.call(r,e)||await a()})),e.removeAttribute("onsubmit")},a.handleLinkSubmit=async function(e,a){var n;e.addEventListener("click",(n=e.onclick,async e=>{t(e);const r=e.target;!1!==n?.call(r,e)&&await a()})),e.removeAttribute("onclick")},a.todayMonth=function(){return(new Date).toISOString().split("-",2).join("-")},a.unique=function(e){return e.reduce(((e,a)=>e.includes(a)?e:[...e,a]),[])},a.slug=function(e){return e.replace(/\W+/g,"-").replace(/^-+/,"").replace(/-+$/,"").toLowerCase()},a.scrollIntoView=function(e){e.scrollIntoView({behavior:"smooth",block:"nearest",inline:"nearest"})}},377:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.getCurrentVarietyId=void 0,a.getCurrentVarietyId=function(){const e=new URL(document.location.href).searchParams.get("vid");if(e)return e;const a=document.querySelector("#edit-coin-form form");if(a){const e=new FormData(a).get("variety");if(e)return e.toString()}}},897:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.WishForm=void 0;const n=t(136);class r extends n.ListForm{constructor(){super(...arguments),this.formType="wish",this.formTypeMethod="Wish",this.formTypePrefix="w",this.formUidPrefix="w",this.buttonSetButtons=new Map([["*",[1,0]],["VF+",[10,3]],["XF+",[11,2]],["UN",[12,1]]])}fillForm(e="",a="",t="",n,r=""){super.fillForm(e,a,t,r),this.form?.is_type&&(this.form.is_type.checked=!0)}async updateForm(){await super.updateForm(),this.updateVarieties()}updateVarieties(){const e=this.form?.[this.formVariety];if(e){const a=e[0].parentElement,t=a.cloneNode(),n=a.querySelector("input")?.cloneNode();n.value="",t.insertAdjacentElement("beforeend",n),t.insertAdjacentText("beforeend","ANY"),a.insertAdjacentElement("beforebegin",t)}}getConditionOption(e){const{value:a,textContent:t}=e;if(a||t?.includes("ANY"))return{text:t,value:a,checked:"3"===a?"checked":"",style:e.getAttribute("style")||""}}}a.WishForm=r},142:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.syncListWish=a.syncCoinWish=a.CoinWishFormOnMatcher=void 0;const n=t(759),r=t(799),i=t(159),o=t(52),s=t(422),l=t(131);a.CoinWishFormOnMatcher=/CoinWishFormOn\('(?<uwid>[^']*)', '(?<cond>[^']*)'/,a.syncCoinWish=async function(){const e=new FormData(document.querySelector("#edit-coin-form form")).get("condition");if(!e)return;const t=new FormData(document.querySelector("#wish-form")),i=document.querySelectorAll("#wish-block a.list-link"),s=+e;switch(s){case 7:case 1:if(!i.length)return;for(const e of i){const i=e.getAttribute("onClick")?.match(a.CoinWishFormOnMatcher);i&&(t.set("uwid",i.groups.uwid||""),t.set("action","delwishcoin"),await(0,r.randomDelay)(),await(0,n.post)(location.href,t),e.remove())}return;default:let e;switch(s){case 2:e=1;break;case 3:e=2;break;default:e=3}if(!i.length){t.set("uwid",""),t.set("wish-variety",""),t.set("condition",`${e}`),t.set("action","addwishcoin"),await(0,r.randomDelay)();const a=(await(0,n.postFragment)(location.href,t)).querySelector("#wish-block");return void(a&&((0,o.styleListLinks)(a),a.querySelector("center")?.remove(),document.querySelector("#wish-block")?.replaceWith(a)))}if(i.length>1){let s=!0;for(const l of i){const i=l.getAttribute("onClick")?.match(a.CoinWishFormOnMatcher);if(s)s=!1;else if(i?.groups.uwid)if(t.set("uwid",i.groups.uwid),t.set("condition",s?`${e}`:""),t.set("action",s?"editwishcoin":"delwishcoin"),await(0,r.randomDelay)(),s){const e=(await(0,n.postFragment)(location.href,t)).querySelector("#wish-block");e&&((0,o.styleListLinks)(e),e.querySelector("center")?.remove(),document.querySelector("#wish-block")?.replaceWith(e))}else await(0,n.post)(location.href,t),l.remove()}}return}};const c={en:"Sync wish",lt:"Derinami norai",ru:"Сверяются желания"};a.syncListWish=async function(){const e=document.getElementById("button-container");if(!e)return;const a="sync";e.insertAdjacentHTML("afterbegin",`<label><input type='checkbox' id='sync'/> ${c[i.lang]}</label>`);const t=document.getElementById(a);async function n(){t.checked=!1,location.href=await(0,s.updateHashHref)((e=>{e.delete(a)}))}t.addEventListener("change",(async()=>{if(!t.checked)return t.disabled=!0,console.debug("disabling"),n();console.debug("enabling"),await async function(){return(0,s.updateLocationHash)((e=>{e.set(a,"y")}))}();const e=document.querySelectorAll(".coin-desc > div > a.blue-15");if(!e)return console.debug("no coins, disabling"),n();for(const n of e){await(0,r.randomDelay)(),console.debug(`updating ${n.textContent}`),(0,l.scrollIntoView)(n);const{screenLeft:e,screenTop:i,outerWidth:o,outerHeight:s}=window,c=window.open(n.href,a,["width="+o/1.25,"height="+s/1.5,`left=${e+o/10}`,`top=${i+s/10}`].join(","));if(c&&(await(0,r.randomDelay)(5e3,5e3),c.close()),!t.checked)return void console.debug("stop updating")}const i=document.querySelector(".pages");if(!i)return console.debug("no pages, disabling"),n();const o=+(i.querySelector("a.current")?.textContent||0);if(!o)return console.debug("no current page, disabling"),n();const c=i.querySelector([`a[href$="page=${o+1}"]`,`a[href*="page=${o+1}&"]`,`a[href*="page=${o+1}#"]`].join(","));if(!c)return console.debug("no next page, disabling"),n();await(0,r.randomDelay)(5e3,5e3),console.debug("going next page",c.textContent),location.href=await(0,s.updateHashHref)((e=>{e.set(a,"y")}),c.href)})),(0,s.getHashParam)(a)&&t.click()}},209:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleLanguages=a.handleTree=void 0,a.handleTree=async function(){const e=document.getElementById("catalog-tree");if(e){const a="tree-search",t=document.getElementById(a);t&&t.closest("div")?.remove();const n="search-input-id";e.insertAdjacentHTML("beforebegin",`<input id='${n}' class='tree-filter' placeholder='Search'/>`);const r=document.getElementById(n);r.addEventListener("input",(()=>{const a=new RegExp(r.value.replace(/\W+/g,".*?"),"i");for(const t of e.querySelectorAll("a.country-name")){const e=t.closest("div.country");if(e){const n=a.test(t.textContent);let r=0;const i=e.querySelectorAll("a.period");for(const e of i)if(n)e.classList.remove("hide");else{const t=a.test(e.textContent);e.classList.toggle("hide",!t),t&&(r+=1)}e.classList.toggle("hide",!n&&!r);const o=r>0&&r<6,s=e.querySelector(".periods");s&&(s.style.display=o?"block":"none");const l=e.querySelector("img");l&&(l.src=o?"/i/bg/minus.gif":"/i/bg/plus.gif")}}const t=e.querySelectorAll("div.country:not(.hide)");if(1===t.length){const e=t[0],a=e.querySelector(".periods");a&&(a.style.display="block");const n=e.querySelector("img");n&&(n.src="/i/bg/minus.gif")}for(const a of e.querySelectorAll("div.reg")){const{length:e}=a.querySelectorAll("div.country:not(.hide)");a.classList.toggle("hide",!e);const t=a.querySelector(".region");if(t){const n=e>0&&e<=5||t.matches(".open");a.querySelector(".countries")?.classList.toggle("hide",!n)}}}))}},a.handleLanguages=async function(){let e=document.querySelector('ul.bottom-lang a[href*="://lt."]');if(e)return;const a=document.querySelector('ul.bottom-lang a[href*="://it."]');if(!a)return;const t=a.closest("li"),n=t?.nextElementSibling,r=t?.cloneNode(!0);e=r?.querySelector("a"),e&&(e.href=a.href.replace("/it.","/lt."),e.textContent="Lietuvių",n?.insertAdjacentElement("afterend",r),r?.insertAdjacentElement("afterend",n?.cloneNode(!0)))}},946:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleCoinPage=void 0;const n=t(659),r=t(379),i=t(48),o=t(385),s=t(897),l=t(142);a.handleCoinPage=async function(){const e=document.getElementById("tags");if(e){const a=e.querySelectorAll('a[href^="/gallery/"]');for(const e of a)(0,r.updateLinkHref)(e)}await(new n.CoinForm).handle(),await(new o.SwapForm).handle(),await(0,i.estimateSwapPrices)(),await(0,i.estimateWeightPrice)(),await(new s.WishForm).handle(),await(0,l.syncCoinWish)()}},795:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleGalleryPage=void 0;const n=t(691),r=t(379),i=t(142);a.handleGalleryPage=async function(){const e=document.getElementById("gallery");if(e){const a=e.querySelectorAll('a[href^="/gallery/"]');for(const e of a)(0,r.updateLinkHref)(e);const t=e.querySelectorAll('a[href^="?"]');for(const e of t)(0,r.updateLinkHref)(e);const n=e.querySelectorAll("a.switcher");for(const e of n){const a=new URL(e.href).searchParams.get("view"),t=e.parentElement?.querySelector("div.close");a&&t&&(0,r.updateOnClickHref)(t,[a])}const i=e.querySelectorAll(".coin").length,o=+e.querySelector(".pages a:last-child")?.textContent,s=+e.querySelector(".pages a.current")?.textContent;if(i){const a=s===o,t=a?12*(o-1)+i:12*(o-1);e.querySelector("h1")?.insertAdjacentHTML("beforeend",` <small>(${i}${o?` <small>of ${a?t:`${t+1}~${t+12}`}</small>`:""})</small>`)}}await(0,n.addGalleryVisibilityToggle)(),await(0,i.syncListWish)()}},527:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleHomePage=void 0;const n=t(560);a.handleHomePage=async function(){const e=document.getElementById("profile");if(e){const a=e.querySelector("div.worth-cur-value span");if(a){const t=+a.textContent.replace(/[^\d.]/g,""),r=e.querySelector(`a[href="/swap-list/?uid=${n.UID}"] span.right`);if(r){const e=t+ +r.textContent.replace(/[^\d.]/g,"");a.classList.add("price"),a.insertAdjacentHTML("beforeend",`<br/><small class='total'><abbr class='cur'>€</abbr> ${new Intl.NumberFormat("en").format(e)}</small>`)}}}}},809:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleMessagePage=void 0,a.handleMessagePage=async function(){const e=document.getElementById("user-list")?.querySelectorAll("table.user tr[onclick]");if(e)for(const a of e){const e=a.querySelector("td.user-container a"),t=a.attributes.getNamedItem("onclick")?.value.match(/href\s*=\s*'(.*?)'/);e&&t&&(e.href=t[1],e.onclick=e=>e.stopPropagation())}}},940:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleSwapPage=void 0;const n=t(379),r=t(65),i=t(188);a.handleSwapPage=async function(){(0,r.addSwapTitle)(),(0,r.addThumbnails)(),(0,r.markSeparateCountries)(),(0,r.addOpenedTabsHandler)(),(0,i.addSortingOptions)(),(0,i.addFilteringOptions)(),(0,r.duplicatePagination)(),(0,r.showAllPrices)(),(0,r.addConflictHandling)(),(0,r.checkSold)(),(0,r.ignoreUnwanted)(),(0,r.removeRowHrefFromSwapList)(),await(0,r.addPriceUpdateButton)(),(0,r.addTrackingLinks)(),(0,r.calcTotalPrices)();const e=document.getElementById("tree");if(e){const a=e.querySelectorAll(".filter-container .list-link");for(const e of a)(0,n.updateLinkHref)(e);const t=e.querySelectorAll(".filter-container .filter-box-active");for(const e of t){const a=e.getAttribute("id")?.replace(/-filter/,""),t=e.querySelector(".close");a&&t&&(0,n.updateOnClickHref)(t,[a])}}}},114:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleTablePage=void 0;const n=t(131);a.handleTablePage=async function(){if(document.getElementById("sort-filter")){const e=document.getElementById("sort-filter-dialog");if(e){const a=new URL(location.href),t=a.searchParams;t.set("order","ka"),e.insertAdjacentHTML("beforeend",`<a class='list-link' href='${a.href}'><div class='left gray-13'>Krause</div><div class='right'><span class='arrow at'></span></div></a>`),t.set("order","kd"),e.insertAdjacentHTML("beforeend",`<a class='list-link' href='${a.href}'><div class='left gray-13'>Krause</div><div class='right'><span class='arrow ab'></span></div></a>`);const r=e.querySelectorAll("a.list-link");for(const e of r)e.addEventListener("click",n.cancel)}}}},752:(e,a,t)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.handleWishPage=void 0;const n=t(65);a.handleWishPage=async function(){(0,n.addThumbnails)()}},196:function(e,a,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=n(t(702)),i=t(34),o=t(560),s=t(946),l=t(795),c=t(527),u=t(809),d=t(940),h=t(114),p=t(209),m=t(752);document.head.insertAdjacentHTML("beforeend",`<style>${r.default}</style>`),async function(){const e=document.location.href;e.includes(`/uid${o.UID}`)&&await(0,c.handleHomePage)(),e.includes("/coin")&&await(0,s.handleCoinPage)(),e.includes("/gallery")&&e.includes(`uid=${o.UID}`)&&(await(0,l.handleGalleryPage)(),e.includes("view=country")&&await(0,i.handleCountryRegions)()),e.includes("/swap-")&&await(0,d.handleSwapPage)(),e.includes("/wish-")&&await(0,m.handleWishPage)(),e.includes("/table/")&&await(0,h.handleTablePage)(),e.includes("/messages/")&&await(0,u.handleMessagePage)(),await(0,p.handleTree)(),await(0,p.handleLanguages)()}()}},a={};function t(n){var r=a[n];if(void 0!==r)return r.exports;var i=a[n]={id:n,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.exports}t.n=e=>{var a=e&&e.__esModule?()=>e.default:()=>e;return t.d(a,{a}),a},t.d=(e,a)=>{for(var n in a)t.o(a,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:a[n]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};t(196)})();